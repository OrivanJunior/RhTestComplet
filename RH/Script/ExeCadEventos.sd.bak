uses 
CommonsAll,
ObjCadEventos,
VarConst,
CoommonsObj,
DatapoolEventos;


procedure FiltroTelaInicialEvento();
begin
FiltraCadEvento();
FiltraConsultaEventos.Keys('Código do Evento');
FiltraEventos.SelectItem('(Ignorar)');
BtnOKFiltroEvento.ClickButton;
end;

procedure PreencheInfoNormais(pathData);
Var
DDTInfoNormais : OleVariant;
begin

MapCadInfoNormais();

DDTInfoNormais := CarregaDDT(pathData,'Informações Normais');

LeDataPoolInfoNormais(DDTInfoNormais.Name);

VerificaInsere(CadEventosEBIdEventos,CadEventosDPIdEventos);
VerificaInsere(CadEventosEBSequencia,CadEventosDPSequencia);
VerificaInsere(CadEventosEBInativo,CadEventosDPInativo);
VerificaInsere(CadEventosEBSubseq,CadEventosDPSubseq);
PreencheDatas(CadEventosEBDtinativo,CadEventosDPDtinativo);
VerificaInsere(CadEventosEBUserid,CadEventosDPUserid);
VerificaInsere(CadEventosEBDescricao,CadEventosDPDescricao);
VerificaInsere(CadEventosEBCodhomolog,CadEventosDPCodhomolog);
VerificaInsere(CadEventosEBInvisivel,CadEventosDPInvisivel);
VerificaInsere(CadEventosEBOpevento,CadEventosDPOpevento);
VerificaConsultaF3Insere(_ModuloFolha,CadEventosEBIdtipo,CadEventosDPIdtipo);
VerificaConsultaF3Insere(_ModuloFolha,CadEventosEBIdevecalc,CadEventosDPIdevecalc);
end;

procedure PreencheValidaSituacao(pathData);
var
DDTSituacao : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 0;
  
  MapCadValidacoes();
  
  DDTSituacao := CarregaDDT(pathData, 'Situações');
  
  LeDataPoolValidacoes(DDTSituacao.Name);
  
  
  BtnIncSit.Click();
  
  Log.Checkpoint('Preenchendo Situações');
  
  VerificaClickPreencheGrid(GridSituacao,i, 'Código', ValidaEventosDPCodSit);
  
  GridSituacao.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTSituacao.Name);
end;

procedure PreencheValidaCausas(pathData);
var
DDTCausas : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 1;
  
  MapCadValidacoes();
  
  DDTCausas := CarregaDDT(pathData, 'Causas');
  
  LeDataPoolValidacoes(DDTSituacao.Name);
  
  
  BtnIncCau.Click();
  
  Log.Checkpoint('Preenchendo Causas');
  
  VerificaClickPreencheGrid(GridCausas,i, 'Código', ValidaEventosDPCodCau);
  
  GridCausas.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTCausas.Name);
end;

procedure PreencheValidaVinculos(pathData);
var
DDTVinculos : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 2;
  
  MapCadValidacoes();
  
  DDTVinculos := CarregaDDT(pathData, 'Vínculos');
  
  LeDataPoolValidacoes(DDTVinculos.Name);
  
  BtnIncVin.Click();
  
  Log.Checkpoint('Preenchendo Vínculos');
  
  VerificaClickPreencheGrid(GridVinculos,i, 'Código', ValidaEventosDPCodVin);
  
  GridVinculos.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTVinculos.Name);
end;

procedure PreencheValidaProcessamentos();
var
DDTProcessamento : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 3;
  
  MapCadValidacoes();
   
  DDTProcessamentos := CarregaDDT(pathData, 'Processamentos');
  
  LeDataPoolValidacoes(DDTProcessamento.Name);
 
  BtnIncProc.Click();
  
  Log.Checkpoint('Preenchendo Processamentos');
  
  VerificaClickPreencheGrid(GridProcessamentos,i, 'Código', ValidaEventosDPCodProc);
  
  GridProcessamentos.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTProcessamento.Name);
end;

procedure PreencheValidaTurnos(pathData);
var
DDTTurnos : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 4;
  
  MapCadValidacoes();
  
  DDTTurnos := CarregaDDT(pathData, 'Turnos');
  
  LeDataPoolValidacoes(DDTTurnos.Name);
  
  BtnIncTur.Click();
  
  Log.Checkpoint('Preenchendo Turnos');
  
  VerificaClickPreencheGrid(GridTurnos,i, 'Código', ValidaEventosDPCodTurn);
  
  GridTurnos.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTTurnos.Name);
end;

procedure PreencheValidaCategorias(pathData);
var
DDTCategoria : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 5;
  
  MapCadValidacoes();
   
  DDTCategoria := CarregaDDT(pathData, 'Categorias');
  
  LeDataPoolValidacoes(DDTCategoria.Name);
 
  BtnIncCat.Click();
  
  Log.Checkpoint('Preenchendo Categorias');
  
  VerificaClickPreencheGrid(GridCategorias, i, 'Código', ValidaEventosDPCodCat);
  
  GridCategorias.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTCategoria.Name);
end;

procedure PreencheValidaConfiguracao(pathData);
var
DDTConfiguracao : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 6;
  
  MapCadValidacoes();
  
  DDTConfiguracao := CarregaDDT(pathData, 'Configuração Dirf-Rendimentos');
  
  LeDataPoolDirfRendimentos(DDTConfiguracao.Name);
  
  Log.Checkpoint('Preenchendo Configurações Dirf');
  
  VerificaInsere(CadDirfRendiEBCampo,CadDirfRendiDPCampo);
  VerificaInsere(CadDirfRendiEBLinha,CadDirfRendiDPLinha);
  VerificaInsere(CadDirfRendiEBFormula,CadDirfRendiDPFormula);
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTConfiguracao.Name);
end;

procedure PreencheIncidencias(pathData);
var
DDTIncidencia : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageTab.ActivePageIndex := 1;
  
  MapCadIncidencias();
    
  DDTCategoria := CarregaDDT(pathData, 'Incidências');
  
  LeDataPoolIncid(DDTIncidencia.Name);

  BtnIncIncide.Click();
  
  Log.Checkpoint('Preenchendo Categorias');
  
  VerificaClickPreencheGrid(GridIncidencias, i, 'Código', IncidEventosDPCod);
  
  GrideIncidencias.Click();
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTIncidencia.Name);
end;

procedure PreencheParametros(pathData);
var
DDTParamentro : OleVariant;
i : integer;
begin
i:= 0;

  CadFormPageValida.ActivePageIndex := 3;
  
  MapCadParametros();
  
  DDTParamentro := CarregaDDT(pathData, 'Parâmetros');
  
  LeDataPoolParam(DDTParamentro.Name);
  
  CadFormParam.ActivePageIndex := 0;
  Log.Checkpoint('Preenchendo Parâmetros');
  {Valor base}
  VerificaInsere(CadParamEBValorBaseModo,CadParamDPValorBaseModo);			
  VerificaInsere(CadParamEBValorBaseBase,CadParamDPValorBaseBase);			
  VerificaConsultaF3Insere(_ModuloFolha,CadParamEBValorBaseTipo,CadParamDPValorBaseTipo);
  VerificaConsultaF3Insere(_ModuloFolha,CadParamEBValorBaseMeses,CadParamDPValorBaseMeses);
  VerificaInsere(CadParamEBValorBaseMes,CadParamDPValorBaseMes);
  VerificaInsere(CadParamEBValorBaseAno,CadParamDPValorBaseAno);
  VerificaInsere(CadParamEBValorHora,CadParamDPValorHora);
  VerificaInsere(CadParamEBCalculaReducao,CadParamDPCalculaReducao);
  
  {Adicional}
  CadFormParam.ActivePageIndex := 1;
  Delay(1000);
  VerificaInsere(CadParamEBAdicionalInforme,CadParamDPAdicionalInforme);
  {Outros}
  CadFormParam.ActivePageIndex := 2;
  Delay(1000);
  VerificaInsere(CadParamEBJornadaAConsiderar,CadParamDPJornadaAConsiderar);
  {Proporcionalidade}
  CadFormParam.ActivePageIndex := 3;
  Delay(1000);
  VerificaConsultaF3Insere(_ModuloFolha,CadParamEBProporcionalidadeBase,CadParamDPProporcionalidadeBase);
  
  if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;
  DDT.CloseDriver(DDTParamentro.Name);
end;

procedure PreencheESocial(pathData);
Var
DDTInfoGerais : OleVariant;
begin
CadFormPageTab.ActivePageIndex := 4;

MapCadESocial();

DDTInfoGerais := CarregaDDT(pathData,'Informações Gerais');
LeDataPoolESocial(DDTInfoGerais.Name);

Log.Checkpoint('Preenchendo eSocial');
VerificaConsultaF3Insere(_ModuloFolha,CadESocEBIdeventonat,CadESocDPIdeventonat);
VerificaInsere(CadESocEBObservacao,CadESocDPObservacao);
VerificaInsere(CadESocEBIndApurIrrf,CadESocDPIndApurIrrf);

BtnIncTrib.Click();

if (Aliases.Folha.WaitWindow('#32770', 'Aviso', 1, 2000).Exists) then
  begin
    TelaAviso := Aliases.Folha.Window('#32770', 'Aviso', 1);
    
    BtnSim := TelaAviso.Window('Button', '&Sim', 1);
    BtnNao := TelaAviso.Window('Button', '&Não', 2);
    
    BtnNao.Click();
  end;

end;

procedure CadastraEvento(pathData);
begin

AcessaItem(_ModuloFolha, 'Cadastros Gerais','Gerais','Eventos','Eventos');

MapGridConsulta(_ModuloFolha);



FiltroTelaInicialEvento();

MapCadFormEventos();

PreencheInfoNormais(pathData);

PreencheESocial(pathData);

end;

procedure AlteraEvento(pathData);
begin

end;

procedure ExcluiEvento(pathData);
begin

end;
