uses
  DataPoolConfSEFIP, ObjConfSEFIP, CommonsAll, CommonsObj, VarConsts;
  
Const
  _Todos = 'TO';
  _TodosEmpresa = 'TE';
  _Selecionados = 'SC';
  _Especifico = 'ES';
  
  procedure AcessaSEFIP();
begin
  AcessaItem(_ModuloFolha, 'Relatórios', 'INSS', 'Conferência SEFIP'); 
end;

procedure FiltraEstab();
begin
  if (FiltroEstabTipo = _Especifico) then
  begin
    CadEstabEspec.ClickButton;
    VerificaInsere(CadEstabEspecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Específico, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _TodosEmpresa) then
  begin
    CadEstabTodosEmp.ClickButton;
    VerificaInsere(CadEstabTodosEmpCampo, FiltroEstabValor);  
    Log.Checkpoint('Selecionado Estabelecimentos - Todos da Empresa: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Selecionados) then
  begin
    CadEstabSelec.ClickButton;
    VerificaInsere(CadEstabSelecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Selecionados, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Todos) then
  begin
    CadEstabTodos.ClickButton;
    Log.Checkpoint('Selecionado Estabelecimentos - Todos');
  end;
end;


procedure FiltraLocais();
begin
  if (CadLocaisTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whLocais.whLocais10.Click();
    
  if (FiltroLocalTipo = _Especifico) then
  begin
    CadLocaisEspec.ClickButton;
    VerificaInsere(CadLocaisEspecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Específico, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Selecionados) then
  begin
    CadLocaisSelec.ClickButton;
    VerificaInsere(CadLocaisSelecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Selecionados, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Todos) then
  begin
    CadLocaisTodos.ClickButton;
    Log.Checkpoint('Selecionado Locais - Todos');
  end;
end;


procedure FiltraEmpregados();
begin
  if (CadEmpreTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whEmpregados.whEmpregados10.Click();
    
  if (FiltroEmpreTipo = _Especifico) then
  begin
    CadEmpreEspec.ClickButton;
    VerificaInsere(CadEmpreEspecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Específico, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Selecionados) then
  begin
    CadEmpreSelec.ClickButton;
    VerificaInsere(CadEmpreSelecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Selecionados, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Todos) then
  begin
    CadEmpreTodos.ClickButton;
    Log.Checkpoint('Selecionado Empregados - Todos');
  end;
end;

procedure FiltraData();
begin
  if (FormGPSWhDataDtIni.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whDatas.whDatas10.Click();
    
  PreencheDatas(CadDataDtIni, FiltroDataIni); 
  PreencheDatas(CadDataDtFin, FiltroDataFin);
  Log.Checkpoint('Intervalo de Datas: ' + FiltroDataIni + ' à ' + FiltroDataFin);
end;

procedure FiltraProcessamentos();
begin
  if (FormGPSWhProcTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whProcesso.whProcesso10.Click();
    
  if (FiltroProcTipo = _Especifico) then
  begin
    CadProcEspec.ClickButton;
    VerificaInsere(CadProcEspecCampo, FiltroProcValor);
    Log.Checkpoint('Selecionado Processamentos - Específico, com valor: ' + FiltroProcValor);
  end
  else if (FiltroProcTipo = _Selecionados) then
  begin
    CadProcSelec.ClickButton;
    VerificaInsere(CadProcSelecCampo, FiltroProcValor);
    Log.Checkpoint('Selecionado Processamentos - Selecionados, com valor: ' + FiltroProcValor);
  end
  else if (FiltroProcTipo = _Todos) then
  begin
    CadProcTodos.ClickButton;
    Log.Checkpoint('Selecionado Processamentos - Todos');
  end;
end;

procedure FiltraSituacoes();
begin
  if (CadSituaTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whSituacao.whSituacao10.Click();
    
  if (FiltroSituaTipo = _Especifico) then
  begin
    CadSituaEspec.ClickButton;
    VerificaInsere(CadSituaEspecCampo, FiltroSituaValor);
    Log.Checkpoint('Selecionado Situação - Específico, com valor: ' + FiltroSituaValor);
  end
  else if (FiltroSituaTipo = _Selecionados) then
  begin
    CadSituaSelec.ClickButton;
    VerificaInsere(CadSituaSelecCampo, FiltroSituaValor);
    Log.Checkpoint('Selecionado Situação - Selecionados, com valor: ' + FiltroSituaValor);
  end
  else if (FiltroSituaTipo = _Todos) then
  begin
    CadSituaTodos.ClickButton;
    Log.Checkpoint('Selecionado Situação - Todos');
  end;
end;

procedure DadosAdicionais();
begin
  if (CadDadosEBOrdem.VisibleOnScreen = false) then
    Aliases.Folha.FRhRelConfSefip.whSituacao.whSituacao10.Click();
    
  VerificaInsere(CadDadosEBOrdem, FiltroOrdem);
  VerificaInsere(CadDadosEBAnalitGPS, FiltroAnalitGPS);
  VerificaInsere(CadDadosEBAnalitGPS13, FiltroAnalitGPS13);
  VerificaInsere(CadDadosEBAnalitFGTS, FiltroAnalitFGTS );
  VerificaInsere(CadDadosEBListaPrest, FiltroListaPrest);
end;

procedure FechaMensagemProcessoConcluido();
var 
  TelaAtencao, BtnOk: OleVariant;
begin
  if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
  begin
    TelaAtencao := Aliases.Folha.Window('#32770', 'Processo Concluído!', 1);
    BtnOk       := TelaAtencao.Window('Button', 'OK', 1);
    
    BtnOk.Click();  
  end;
end;

procedure ExecutaSEFIP(pathData);
var 
  DDTGPS: OleVariant;
  MensagemInativa: boolean;
begin
  MensagemInativa := True;
  
  AcessaGPS();

  MapGPS();
  
  DDTGPS := CarregaDDT(pathData, 'Filtro');
  
  LeDataPoolGPS(DDTGPS.Name);

  FiltraEstab();

  FiltraLocais();

  FiltraEmpregados();

  FiltraData();

  FiltraProcessamentos();

  DadosAdicionais();

  btnExecutar.Click();

  if Aliases.Folha.WaitWindow('#32770', 'Atenção!', 1, 2000).Exists then
      Aliases.Folha.Window('#32770', 'Atenção!', 1).btnOK.Click;
      
  while MensagemInativa do
  begin      
    if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 5000).Exists) then
    begin
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();     
      
      btnSalvar.Click();

      FechaMensagemProcessoConcluido();
      
      ActFechar(FormGPS);
      
      MensagemInativa := false;
    end
    else
    if (Aliases.Folha.FVsErrorDlg.Visible) then
    begin
      Log.Warning('Nenhum registro encontrado');
      
      Aliases.Folha.FVsErrorDlg.ButtonPanel.OKBtn.Click();
      
      ActFechar(FormGPS);
      
      MensagemInativa := False
    end;
  end;  
  DDT.CloseDriver(DDTGPS.Name);
end;


