  uses
  CommonsAll,
  VarConsts,
  CommonsObj, 
  ObjCadFap,
  DataPoolCadFap;
  
  procedure FiltroCadastroFap();
  begin
  MapFiltroCadFap();
  end;
  
  procedure PreencherDados();
  begin
  VerificaConsultaF3Insere(_ModuloFolha,CadFapEBEstab,CadFapDPEstab);	        	
  PreencheDatas(CadFapEBData,CadFapDPData);			  		
  VerificaInsere(CadFapEBFap,CadFapDPFap);	   		 	 
  VerificaConsultaF3Insere(_ModuloFolha,CadFapEBIdProcessoJud,CadFapDPIdProcessoJud);
  end;
  
  (*Cadastra*)
  procedure CadastraFap(pathData);
var
  DDTFap;
begin
  DDTFap := CarregaDDT(pathData, _Cadastrar);
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'FAP');
  
//  FiltroCadastroFap();
  
  while not (DDTFap.EOF) do
  begin
  LeDataPoolCadFap(DDTFap.Name);
  
  MapGridConsulta(_ModuloFolha);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
      ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHFAP');
      
      FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Código Processo', CadFapDPIdProcessoJud);
      if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
    begin
      ActIncluir(FormTelaConsultaForm);
      MapCadFap;
      if (CadFapForm.Exists) then
      begin
       PreencherDados();
        ActSalvar(CadFapForm);
        ActFechar(CadFapForm);
      end;
    end;
   DDTFap.Next;
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTFap.Name);
end;
   
(*Altera*)

procedure AlteraFap(pathData);
var
  DDTFap;
begin
  DDTFap := CarregaDDT(pathData, _Alterar);
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'FAP');
  
 // FiltroCadastroFap();
  
  while not(DDTFap.EOF) do
  begin
    LeDataPoolCadFap(DDTFap.Name);
  
    MapGridConsulta(_ModuloFolha);
  
    if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHFAP');
  
    FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Código Processo', CadFapDPIdProcessoJud);
    if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    begin
      ActConsulta(FormTelaConsultaForm);
  
      MapCadFap();
  
      if (CadFapForm.Exists) then
      begin
        PreencherDados(); 
  
        ActSalvar(CadFapForm);
        ActFechar(CadFapForm);
      end;
    end;
    DDTFap.Next;
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTFap.Name);
end;

  (*Exclui*)

procedure ExcluirFap(pathData);
var
  DDTFap;
begin
  DDTFap := CarregaDDT(pathData, _Excluir);
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'FAP');
  
//  FiltroCadastroFap();
  
  while not(DDTFap.EOF) do
  begin
    LeDataPoolCadFap(DDTFap.Name);
  
    MapGridConsulta(_ModuloFolha);
  
    if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
      ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHFAP');
  
    FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Código Processo', CadFapDPIdProcessoJud);
  
    if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    begin
      
      ActExcluir(_ModuloFolha, 'FBRowseCds');
      
    end;
    DDTFap.Next;
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTFap.Name);
end;