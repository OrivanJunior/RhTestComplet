uses CommonsAll, CommonsObj, VarConsts,DataPoolLocais,ObjLocais;

{Locais}
procedure PreencheLocais();
begin

PageLocal.ActivePageIndex:=0;

MapCadLocais();

VerificaInsere(CadLocaisEBEstab,CadLocaisDPEstab);
VerificaInsere(CadLocaisEBIdlocal,CadLocaisDPIdlocal);
VerificaInsere(CadLocaisEBDescricao	,CadLocaisDPDescricao);
VerificaConsultaF3Insere(_ModuloFolha,CadLocaisEBNivel1,CadLocaisDPNivel1);
VerificaConsultaF3Insere(_ModuloFolha,CadLocaisEBNivel2,CadLocaisDPNivel2);
VerificaConsultaF3Insere(_ModuloFolha,CadLocaisEBNivel3,CadLocaisDPNivel3);
VerificaConsultaF3Insere(_ModuloFolha,CadLocaisEBCodTomador	,CadLocaisDPCodTomador);
PreencheDatas(CadLocaisEBDtIncAlt,CadLocaisDPDtIncAlt);
VerificaInsere(CadLocaisEBInativo,CadLocaisDPInativo);
PreencheDatas(CadLocaisEBDtFechamento,CadLocaisDPDtFechamento);
VerificaConsultaF3Insere(_ModuloFolha,CadLocaisEBDtIdExpFin,CadLocaisDPDtIdExpFin);
end;

procedure PreencheLcGps();
begin

PageLocal.ActivePageIndex:=1;

MapCadLcGps();

VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBIdExpconf,CadLcGpsDPIdExpconf);	
VerificaInsere(CadLcGpsEBExpctb,CadLcGpsDPExpctb);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssDebitocomp,CadLcGpsDPInssDebitocomp);
VerificaInsere(CadLcGpsEBInssexpctb,CadLcGpsDPInssexpctb);
VerificaInsere(CadLcGpsEBInssccDebitoComp,CadLcGpsDPInssccDebitoComp);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssDebito,CadLcGpsDPInssDebito);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssCreditoComp,CadLcGpsDPInssCreditoComp);
VerificaInsere(CadLcGpsEBInssccdebito,CadLcGpsDPInssccdebito);
VerificaInsere(CadLcGpsEBInsscccreditocomp,CadLcGpsDPInsscccreditocomp);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssCredito,CadLcGpsDPInssCredito);
VerificaInsere(CadLcGpsEBInsshistcomp,CadLcGpsDPInsshistcomp);
VerificaInsere(CadLcGpsEBInsscccredito,CadLcGpsDPInsscccredito);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssdebitocomp13,CadLcGpsDPInssdebitocomp13);
VerificaInsere(CadLcGpsEBInsshist,CadLcGpsDPInsshist);
VerificaInsere(CadLcGpsEBInssccdebitocomp13,CadLcGpsDPInssccdebitocomp13);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssdebito13,CadLcGpsDPInssdebito13);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInsscreditocomp13,CadLcGpsDPInsscreditocomp13);
VerificaInsere(CadLcGpsEBInssccdebito13,CadLcGpsDPInssccdebito13);
VerificaInsere(CadLcGpsEBInsscccreditocomp13,CadLcGpsDPInsscccreditocomp13);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInsscredito13,CadLcGpsDPInsscredito13);
VerificaInsere(CadLcGpsEBditright1,CadLcGpsDPditright1);
VerificaInsere(CadLcGpsEBInsscccredito13,CadLcGpsDPInsscccredito13);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInssdebitoret,CadLcGpsDPInssdebitoret);
VerificaInsere(CadLcGpsEBInsshist13,CadLcGpsDPInsshist13);
VerificaInsere(CadLcGpsEBInssccdebitoret,CadLcGpsDPInssccdebitoret);
VerificaInsere(CadLcGpsEBCcdebitopad,CadLcGpsDPCcdebitopad);
VerificaConsultaF3Insere(_ModuloFolha,CadLcGpsEBInsscreditoret,CadLcGpsDPInsscreditoret);
VerificaInsere(CadLcGpsEBCccreditopad,CadLcGpsDPCccreditopad);
VerificaInsere(CadLcGpsEBInsscccreditoret,CadLcGpsDPInsscccreditoret);
VerificaInsere(CadLcGpsEBInssHistRet,CadLcGpsDPInssHistRet);
end;

procedure PreencheLcRpa();
begin

PageLocal.ActivePageIndex:=2;

MapCadLcRpa();

VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredinss,CadLcRpaDPCCredinss);
VerificaInsere(CadLcRpaEBCCCredInss,CadLcRpaDPCCCredInss);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCDEBInss,CadLcRpaDPCDEBInss);
VerificaInsere(CadLcRpaEBCCDebInss,CadLcRpaDPCCDebInss);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredIrrf,CadLcRpaDPCCredIrrf);
VerificaInsere(CadLcRpaEBCCCredIrrf	,CadLcRpaDPCCCredIrrf);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCDebIrrf,CadLcRpaDPCDebIrrf);
VerificaInsere(CadLcRpaEBCCDebIrrf,CadLcRpaDPCCDebIrrf);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredTer,CadLcRpaDPCCredTer);
VerificaInsere(CadLcRpaEBCCCredTer,CadLcRpaDPCCCredTer);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCDebTer,CadLcRpaDPCDebTer);
VerificaInsere(CadLcRpaEBCCDebTer,CadLcRpaDPCCDebTer);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredLiq,CadLcRpaDPCCredLiq);
VerificaInsere(CadLcRpaEBCCCredLiq,CadLcRpaDPCCCredLiq);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCDebLiq,CadLcRpaDPCDebLiq);
VerificaInsere(CadLcRpaEBCCDebLiq,CadLcRpaDPCCDebLiq);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredVlrDesc,CadLcRpaDPCCredVlrDesc);
VerificaInsere(CadLcRpaEBCCDebVlrDesc,CadLcRpaDPCCDebVlrDesc);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCDebVlrDesc,CadLcRpaDPCDebVlrDesc);
VerificaInsere(CadLcRpaEBCCCredVlrDesc,CadLcRpaDPCCCredVlrDesc);
VerificaInsere(CadLcRpaEBCCExpFinRpa,CadLcRpaDPCCExpFinRpa);
VerificaConsultaF3Insere(_ModuloFolha,CadLcRpaEBCCredIss,CadLcRpaDPCCredIss);
VerificaInsere(CadLcRpaEBCCCrediss,CadLcRpaDPCCCrediss);
end;

procedure PreencheLcDarfPis();
begin

PageLocal.ActivePageIndex:=3;

MapCadLcDarfPis();

VerificaConsultaF3Insere(_ModuloFolhaCadLcDarfPisEBCDebDarFpis,CadLcDarfPisDPCDebDarFpis);
VerificaInsere(CadLcDarfPisEBCCDebDarfPis,CadLcDarfPisDPCCDebDarfPis);
VerificaConsultaF3Insere(_ModuloFolhaCadLcDarfPisEBCCredDarfPis,CadLcDarfPisDPCCredDarfPis);
VerificaInsere(CadLcDarfPisEBCCCredDarfPis,CadLcDarfPisDPCCCredDarfPis);
VerificaInsere(CadLcDarfPisEBDarfPisHist,CadLcDarfPisDPDarfPisHist);
VerificaInsere(CadLcDarfPisEBDarfPisComp,CadLcDarfPisDPDarfPisComp);
end;

procedure PreencheLcGestoresGrid(pathData);
var 
DDTGestores :OleVariant;
i : integer;
begin
i:= 0;

PageLocal.ActivePageIndex:=5;

MapCadLcGestoresGrid();

DDTExpConf := CarregaDDT(pathData, 'Gestores');

While not (DDTGestores.EOF) do
begin
MapGridConsulta(_ModuloFolha);

LeDataPoolCadExpConf(DDTGestores.Name);

 if (FormGridGestores.ActiveView.ViewData.RowCount < 1) then
 BtnInc.Click;

VerificaClickPreencheGrid(FormGridGestores, i, 'Pessoa', CadLcGestoresDPPessoa);
VerificaClickPreencheGrid(FormGridGestores, i, 'Nome', CadLcGestoresDPNome);

FormGridGestores.Keys('[Tab]');
Inc(i);

DDTGestores.Next;
end;
DDT.CloseDriver(DDTGestores.Name);
end;

{Fixo por Local}

procedure PreencheDadosGeraisFixoLocal(pathData);
var DDTFixoLocal :OleVariant;
begin
PageLocal.ActivePageIndex:=6;

BtnIncFixo.Click;

MapCadFixoLocal();

DDTFixoLocal := CarregaDDT(pathData, 'FixoLocal');

LeDataPoolCadFixoLocal(DDTFixoLocal.Name);

VerificaConsultaF3Insere(_ModuloFolha,CadFixoLEBEstab,CadFixoLDPEstab); 
VerificaConsultaF3Insere(_ModuloFolha,CadFixoLEBIdLocal,CadFixoLDPIdLocal);
VerificaConsultaF3Insere(_ModuloFolha,CadFixoLEBIdEvento,CadFixoLDPIdEvento);

CadFixoLEBIdEvento.Keys('[Tab]');

DDT.CloseDriver(DDTFixoLocal.Name);
end;

procedure PreencheGridPMes();
//var DDTMes :OleVariant;
begin
MapCadFixoLocal();

FormPageTabNormalFixoLc.ActivePageIndex := 0;


//DDTFixoLocal := CarregaDDT(pathData, 'Mes');
//
//LeDataPoolCadFixoLocal(DDTFixoLocal.Name);

BtnIncTRhFixoLMes.Click;

//VerificaClickPreencheGrid(FormGridFixoMes, i, 'Mês',CadFixoLDPMMes);
end;

procedure PreencheGridPMesAno(pathData);
var 
DDTMesAno : OleVariant;
i : integer;
begin
i:= 0;

FormPageTabNormalFixoLc.ActivePageIndex := 1;

DDTMesAno := CarregaDDT(pathData, 'MesAno');

While not (DDTMesAno.EOF) do
begin
MapGridConsulta(_ModuloFolha);

LeDataPoolCadFixoLocal(DDTExpConf.Name);

 if (FormGridFixoMesAno.ActiveView.ViewData.RowCount < 1) then
 
BtnIncRhFixoLMesAno.Click;

VerificaClickPreencheGrid(FormGridFixoMesAno, i, 'Mês', CadFixoLDPMAMes);
VerificaClickPreencheGrid(FormGridFixoMesAno, i, 'Ano', CadFixoLDPMAAno);

FormGridFixoMesAno.Keys('[Tab]');
Inc(i);

DDTMesAno.Next;
end;
DDT.CloseDriver(DDTMesAno.Name);
end;
							
procedure PreencheParametros(pathData);
Var DDTParametros : OleVariant;
begin
FormPageTabNormalFixoLc.ActivePageIndex := 2;

MapCadFixoLocal();

DDTParametros := CarregaDDT(pathData, 'Parametros');

LeDataPoolCadFixoLocal(DDTParametros.Name);

VerificaInsere(CadFixoLEBInforme,CadFixoLDPInforme);
VerificaInsere(CadFixoLEBReferencia,CadFixoLDPReferencia);
VerificaInsere(CadFixoLEBPropBaseHoras,CadFixoLDPPropBaseHoras);
end;

procedure SalvarESairFixoL();
begin
ActSalvar(FormPadraoFixoL);
ActFechar(FormPadraoFixoL);
ActFechar(FormTelaConsultaForm);
end;

procedure PreencheESocial();
begin
PageLocal.ActivePageIndex:=7;

MapCadLcESocial();

VerificaConsultaF3Insere(_ModuloFolha,CadLcESocialEBIdTipoLotacaoTrib,CadLcESocialDPIdTipoLotacaoTrib);
VerificaConsultaF3Insere(_ModuloFolha,CadLcESocialEBIdFpas,CadLcESocialDPIdFpas);
VerificaInsere(CadLcESocialEBTpInsc,CadLcESocialDPTpInsc);
VerificaInsere(CadLcESocialEBNrInscLotacao,CadLcESocialDPNrInscLotacao);
VerificaInsere(CadLcESocialEBTpInscContrat,CadLcESocialDPTpInscContrat);
VerificaInsere(CadLcESocialEBNrInscContrat,CadLcESocialDPNrInscContrat);
VerificaInsere(CadLcESocialEBTpInscProp,CadLcESocialDPTpInscProp);
VerificaInsere(CadLcESocialEBNrInscProp,CadLcESocialDPNrInscProp);
end;


procedure CadastraLocais(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Locais');

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadLocais(DDTCadastrar.Name);

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhLocal');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadLocaisDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadLocais();
  
  PreencheLocais();
  PreencheLcGps();
  PreencheLcRpa();
  PreencheLcDarfPis();
  PreencheLcGestoresGrid(pathData);
  
  PreencheDadosGeraisFixoLocal(pathData);
  PreencheGridPMes();
  PreencheGridPMesAno(pathData);
  PreencheParametros(pathData);
  SalvarESairFixoL();
  PreencheESocial();


  ActSalvar(FormPadraoLocais);
  ActFechar(FormPadraoLocais);
  end;
  
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirLocal(PathData);
var
DDTExcluir : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Local');

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(PathData, _Excluir);

LeDataPoolCadAgencEstab(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhLocal');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadFixoLDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin  
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadLocais();
  
  ActSalvar(FormPadraoLocais);

  ActExcluir(_ModuloFolha, 'FRhLocal');

  ActFechar(FormPadraoLocais);
  end;
  DDTExcluir.Next;
end;
ActFechar(FormTelaConsultaForm);
DDT.CloseDriver(DDTExcluir.Name);
end;

