  uses
  CommonsAll, VarConsts, CommonsObj, ObjCadConfiguracaoEstab,DataPoolCadConfiguracaoEstab;
  
procedure PreencherCadastro();
begin
  MapCadConfigEstabelecimento();
  
  EstabFormPage.ActivePageIndex := 0;
  
  VerificaInsere(CadConfigEstabelecimentoEBCei,CadConfigEstabelecimentoDPCei);				   
  VerificaInsere(CadConfigEstabelecimentoEBIncra,CadConfigEstabelecimentoDPIncra);			   
  VerificaInsere(CadConfigEstabelecimentoEBCpf,CadConfigEstabelecimentoDPCpf);				   
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdPesResp,CadConfigEstabelecimentoDPIdPesResp);	 
  VerificaInsere(CadConfigEstabelecimentoEBCargo,CadConfigEstabelecimentoDPCargo);			   
  VerificaInsere(CadConfigEstabelecimentoEBPisResp,CadConfigEstabelecimentoDPPisResp);  		 
  VerificaInsere(CadConfigEstabelecimentoEBEmail,CadConfigEstabelecimentoDPEmail); 			 
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdConfigMail,CadConfigEstabelecimentoDPIdConfigMail);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdgrupo,CadConfigEstabelecimentoDPIdgrupo);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdSind,CadConfigEstabelecimentoDPIdSind);  		 
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdRais,CadConfigEstabelecimentoDPIdRais);   		  
  VerificaInsere(CadConfigEstabelecimentoEBGeraCaged ,CadConfigEstabelecimentoDPGeraCaged);  
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBCodCagedResp, CadConfigEstabelecimentoDPCodCagedResp);
  VerificaInsere(CadConfigEstabelecimentoEBPriCaged,CadConfigEstabelecimentoDPPriCaged);  	 
  VerificaInsere(CadConfigEstabelecimentoEBPartPat ,CadConfigEstabelecimentoDPPartPat);  	
  VerificaInsere(CadConfigEstabelecimentoEBTipoEmpresa,CadConfigEstabelecimentoDPTipoEmpresa); 
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdcnae ,CadConfigEstabelecimentoDPIdcnae); 
  VerificaInsere(CadConfigEstabelecimentoEBNatJur,CadConfigEstabelecimentoDPNatJur);  	 
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdCatEmp ,CadConfigEstabelecimentoDPIdCatEmp); 
  VerificaInsere(CadConfigEstabelecimentoEBVlrMiniRrf,CadConfigEstabelecimentoDPVlrMiniRrf); 
  VerificaInsere(CadConfigEstabelecimentoEBNroProp,CadConfigEstabelecimentoDPNroProp);     
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBConfNela,CadConfigEstabelecimentoDPConfNela);
  	  
end;

procedure PreencherCalculo();
begin
  MapCadConfigDeCalculo();

  EstabFormPage.ActivePageIndex := 1;    
    
  VerificaInsere(CadConfigEstabelecimentoEBPagaAjudaCompensa,CadConfigEstabelecimentoDPPagaAjudaCompensa);
  VerificaInsere(CadConfigEstabelecimentoEBConsAvoSuspensao13,CadConfigEstabelecimentoDPConsAvoSuspensao13);
  VerificaInsere(CadConfigEstabelecimentoEBSalFamSobBase,CadConfigEstabelecimentoDPSalFamSobBase);
  VerificaInsere(CadConfigEstabelecimentoEBExpCtb,CadConfigEstabelecimentoDPExpCtb);
  VerificaInsere(CadConfigEstabelecimentoEBSalPropVenc,CadConfigEstabelecimentoDPSalPropVenc);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBBasePis,CadConfigEstabelecimentoDPBasePis);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdConfSegDes,CadConfigEstabelecimentoDPIdConfSegDes);
  verificaInsere(CadConfigEstabelecimentoEBJmcfenDias,CadConfigEstabelecimentoDPJmcfenDias);
  verificaInsere(CadConfigEstabelecimentoEBFcnRodias,CadConfigEstabelecimentoDPFcnRodias);
  VerificaInsere(CadConfigEstabelecimentoEBAdmDemcfmenDias,CadConfigEstabelecimentoDPAdmDemcfmenDias);
  VerificaInsere(CadConfigEstabelecimentoEBTpCompFerias	,CadConfigEstabelecimentoDPTpCompFerias);
  verificaInsere(CadConfigEstabelecimentoEBLRegIrrf	,CadConfigEstabelecimentoDPLRegIrrf);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdConfHomolog,CadConfigEstabelecimentoDPIdConfHomolog);
  verificaInsere(CadConfigEstabelecimentoEBDarfcent,CadConfigEstabelecimentoDPDarfcent);      
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBEstabCentdarf,CadConfigEstabelecimentoDPEstabCentdarf);
  verificaInsere(CadConfigEstabelecimentoEBCalcliqFeriasBase,CadConfigEstabelecimentoDPCalcliqFeriasBase);
  verificaInsere(CadConfigEstabelecimentoEBDescInssAvIrrf,CadConfigEstabelecimentoDPDescInssAvIrrf);
  verificaInsere(CadConfigEstabelecimentoEBDescMinIrrf,CadConfigEstabelecimentoDPDescMinIrrf);
  verificaInsere(CadConfigEstabelecimentoEBCalcDif13Neg	,CadConfigEstabelecimentoDPCalcDif13Neg);
  verificaInsere(CadConfigEstabelecimentoEBNomeCalcPagaDi,CadConfigEstabelecimentoDPNomeCalcPagaDi);
  verificaInsere(CadConfigEstabelecimentoEBOrdemListProc,CadConfigEstabelecimentoDPOrdemListProc);
  verificaInsere(CadConfigEstabelecimentoEBCalcProvisao	,CadConfigEstabelecimentoDPCalcProvisao);
  VerificaInsere(CadConfigEstabelecimentoEBCalcPropFerias,CadConfigEstabelecimentoDPCalcPropFerias);
  VerificaInsere(CadConfigEstabelecimentoEBPaEntrouAte,CadConfigEstabelecimentoDPPaEntrouAte);
  VerificaInsere(CadConfigEstabelecimentoEBPaVoltouAte,CadConfigEstabelecimentoDPPaVoltouAte );
  VerificaInsere(CadConfigEstabelecimentoEBCalcPropAfasta,CadConfigEstabelecimentoDPCalcPropAfasta);
  VerificaInsere(CadConfigEstabelecimentoEBPropAdmis,CadConfigEstabelecimentoDPPropAdmis);
  VerificaInsere(CadConfigEstabelecimentoEBPagaDmAte,CadConfigEstabelecimentoDPPagaDmAte);

end;  
  
procedure PreencheFgtsInss();
begin

end;

procedure PreencherConfigContabeis();
begin

end;

procedure PreencherConfigFinanceiro();
begin

end;

procedure PreencherAvisoPrevio();
begin

end;

procedure PreencherListPendencia();
begin

end;



procedure CadastraConfigEstab(pathData);
Var 
  DDTCadastrar: OleVariant;
begin
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  Delay(15000);
  
  MapGridConsulta(_ModuloFolha);
  
  DDTCadastrar := CarregaDDT(pathData, _Cadastrar);
 
  leDataPoolDadosCadastrais(DDTCadastrar.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhFilial');
      
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.', CadConfigEstabelecimentoDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount <= 1) then
  begin
    ActConsulta(FormTelaConsultaForm);
  
    MapFormEstab(); 
       
    PreencherCadastro();
                                        
    PreencherCalculo();
    
    ActSalvar(CadConfigEstabelecimentoForm);
    ActFechar(CadConfigEstabelecimentoForm);
    end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure AlteraConfigEstab(pathData);
Var 
  DDTAlterar: OleVariant;
begin
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  Delay(15000);
  
  MapGridConsulta(_ModuloFolha);
  
  DDTCadastrar := CarregaDDT(pathData, _Alterar);
 
  leDataPoolDadosCadastrais(DDTAlterar.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhFilial');
      
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.', CadConfigEstabelecimentoDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
    ActConsulta(FormTelaConsultaForm);
  
    MapFormEstab(); 
       
    PreencherCadastro();
                                        
    PreencherCalculo();
    
    ActSalvar(CadConfigEstabelecimentoForm);
    ActFechar(CadConfigEstabelecimentoForm);
    end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;


procedure ExcluirConfigEstab(pathData);
Var 
  DDTExcluir: OleVariant;
begin
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  Delay(15000);
  
  MapGridConsulta(_ModuloFolha);
  
  DDTCadastrar := CarregaDDT(pathData, _Excluir);
 
  leDataPoolDadosCadastrais(DDTCadastrar.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhFilial');
      
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.', CadConfigEstabelecimentoDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
    ActConsulta(FormTelaConsultaForm);
    
    MapFormEstab();
    
    ActExcluir(_ModuloFolha, 'FRhFilial');
    
        if (Aliases.Ponto.dlgWarning.Exists) then
      Aliases.Ponto.dlgWarning.Warning.CtrlNotifySink.btnYes.Click();
        
   ActFechar(CadConfigEstabelecimentoForm);

    end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;


