uses CommonsAll,CommonsObj,VarConsts,DataPoolCadTipos,ObjCadTipos;


procedure FiltroCadTipo();
begin

FormFiltroTipo        :=  Aliases.Folha.FFiltroConsultaCDS;
FiltroTipoConsulta    :=  Aliases.Folha.FFiltroConsultaCDS.grpConsulta.cbListaConsultas;
FiltroTipoConsultaCb1 :=  Aliases.Folha.FFiltroConsultaCDS.PanComp.cb1;
BtnFiltroTipoOk       :=  Aliases.Folha.FFiltroConsultaCDS.pnlBotao.bOK;
BtnFiltroTipoCancelar :=  Aliases.Folha.FFiltroConsultaCDS.pnlBotao.bCancelar;

FiltroTipoConsulta.SetText('Tipo do Evento Por Código');
FiltroTipoConsultaCb1.SetText('(Ignorar)');
BtnFiltroTipoOk.ClickButton;
  
end;

procedure PreencheTiposEventos(); 
begin

MapCadTiposEventos();
					
VerifcaInsere(CadTipoEvenEBIdTipo,CadTipoEvenDPIdTipo);
VerifcaInsere(CadTipoEvenEBDescricao,CadTipoEvenDPDescricao);
VerifcaInsere(CadTipoEvenEBAfastDoenca,CadTipoEvenDPAfastDoenca);
VerifcaInsere(CadTipoEvenEBAfastAcidente,CadTipoEvenDPAfastAcidente);
VerifcaInsere(CadTipoEvenEBHorasServMilitar,CadTipoEvenDPHorasServMilitar);
VerifcaInsere(CadTipoEvenEBHorasFerias,CadTipoEvenDPHorasFerias);
VerifcaInsere(CadTipoEvenEBHorasNormais,CadTipoEvenDPHorasNormais);
VerifcaInsere(CadTipoEvenEBHorasExtras,CadTipoEvenDPHorasExtras);
VerifcaInsere(CadTipoEvenEBLicenMaternidade,CadTipoEvenDPLicenMaternidade);
VerifcaInsere(CadTipoEvenEBHorasFaltas,CadTipoEvenDPHorasFaltas);
VerifcaInsere(CadTipoEvenEBProLabore,CadTipoEvenDPProLabore);
VerifcaInsere(CadTipoEvenEBSalDoFgts,CadTipoEvenDPSalDoFgts);
VerifcaInsere(CadTipoEvenEBMultaResc,CadTipoEvenDPMultaResc);
VerifcaInsere(CadTipoEvenEBFeriasResc,CadTipoEvenDPFeriasResc);
VerifcaInsere(CadTipoEvenEBEveInss,CadTipoEvenDPEveInss);
VerifcaInsere(CadTipoEvenEBEveIrrf,CadTipoEvenDPEveIrrf);
VerifcaInsere(CadTipoEvenEBAvPrevioI,CadTipoEvenDPAvPrevioI);
VerifcaInsere(CadTipoEvenEBMediaHrExt,CadTipoEvenDPMediaHrExt);
VerifcaInsere(CadTipoEvenEBAdicFer,CadTipoEvenDPAdicFer);
VerifcaInsere(CadTipoEvenEBIndenizAdic,CadTipoEvenDPIndenizAdic);
VerifcaInsere(CadTipoEvenEBReclusao,CadTipoEvenDPReclusao);
VerifcaInsere(CadTipoEvenEBEveVariavel,CadTipoEvenDPEveVariavel);
VerifcaInsere(CadTipoEvenEBCalcMensal,CadTipoEvenDPCalcMensal);
VerifcaInsere(CadTipoEvenEBLicenPaternidade,CadTipoEvenDPLicenPaternidade);
end;

procedure CadastraTipo(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Tipos');

FiltroCadTipo();

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadTipoEventos(DDTCadastrar.Name);

While not DDTCadastrar.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Tipo do Evento', CadTipoEvenDPIdTipo );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadTiposEventos();
  
  PreencheTiposEventos();
  
  ActSalvar(FormCadTiposEvento);
  ActFechar(FormCadTiposEvento);
  
  end;
  DDTCadastrar.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirTipo(pathData);
var
DDTExcluir : Olevariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Tipos');

FiltroCadTipo();

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(pathData, _Excluir);

LeDataPoolCadTipoEventos(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Tipo do Evento', CadTipoEvenDPIdTipo );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
  
  ActConsulta(FormTelaConsultaForm); 
  ActExcluir(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  ActFechar(FormCadTiposEvento);
  end;
  DDTExcluir.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTExcluir.Name);
end;