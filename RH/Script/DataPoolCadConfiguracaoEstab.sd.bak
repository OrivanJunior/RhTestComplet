var
{Configura estabelecimento}
CadConfigEstabelecimentoDPCei,
CadConfigEstabelecimentoDPIncra,
CadConfigEstabelecimentoDPCpf,
CadConfigEstabelecimentoDPIdPesResp,
CadConfigEstabelecimentoDPCargo,
CadConfigEstabelecimentoDPPisResp,
CadConfigEstabelecimentoDPEmail,
CadConfigEstabelecimentoDPIdConfigMail,
CadConfigEstabelecimentoDPIdgrupo,
CadConfigEstabelecimentoDPIdSind,
CadConfigEstabelecimentoDPIdRais,
CadConfigEstabelecimentoDPGeraCaged,
CadConfigEstabelecimentoDPCodCagedResp,
CadConfigEstabelecimentoDPPriCaged,
CadConfigEstabelecimentoDPPartPat,
CadConfigEstabelecimentoDPTipoEmpresa,
CadConfigEstabelecimentoDPNatJur,
CadConfigEstabelecimentoDPIdCatemp,
CadConfigEstabelecimentoDPVlrMiniRrf,
CadConfigEstabelecimentoDPNroProp,
CadConfigEstabelecimentoDPConfNela,

{ConfigDeCalculo}
CadConfigEstabelecimentoDPPagaAjudaCompensa,	
CadConfigEstabelecimentoDPConsAvoSuspensao13,
CadConfigEstabelecimentoDPSalFamSobBase,		
CadConfigEstabelecimentoDPExpCtb,			
CadConfigEstabelecimentoDPSalPropVenc,		
CadConfigEstabelecimentoDPBasePis,			
CadConfigEstabelecimentoDPIdConfSegDes,	
CadConfigEstabelecimentoDPJmcfenDias,	
CadConfigEstabelecimentoDPAdmDemcfmenDias,	
CadConfigEstabelecimentoDPTpCompFerias,		
CadConfigEstabelecimentoDPLRegIrrf,			
CadConfigEstabelecimentoDPIdConfHomolog,		
CadConfigEstabelecimentoDPCalcliqFeriasBase,	
CadConfigEstabelecimentoDPDescInssAvIrrf,	
CadConfigEstabelecimentoDPDescMinIrrf,	
CadConfigEstabelecimentoDPCalcDif13Neg,		
CadConfigEstabelecimentoDPNomeCalcPagaDi,	
CadConfigEstabelecimentoDPOrdemListProc,		
CadConfigEstabelecimentoDPCalcProvisao,		
CadConfigEstabelecimentoDPFcnRodias,

{ConfigAdiantamento}
CadConfigEstabelecimentoDPCalcPropFerias,
CadConfigEstabelecimentoDPPaEntrouAte,  	
CadConfigEstabelecimentoDPPaVoltouAte, 	
CadConfigEstabelecimentoDPCalcPropAfasta,
CadConfigEstabelecimentoDPPropAdmis,  	
CadConfigEstabelecimentoDPPagaDmAte: OleVariant;

{Configura estabelecimento}
procedure leDataPoolDadosCadastrais(nomeDriver);
begin
CadConfigEstabelecimentoDPCei			              := DDT.DriverByName(nomeDriver).Value('CEI');
CadConfigEstabelecimentoDPIncra			            := DDT.DriverByName(nomeDriver).Value('INCRA');
CadConfigEstabelecimentoDPCpf			              := DDT.DriverByName(nomeDriver).Value('CPF');
CadConfigEstabelecimentoDPIdPesResp		          := DDT.DriverByName(nomeDriver).Value('IDPESRESP');
CadConfigEstabelecimentoDPCargo			            := DDT.DriverByName(nomeDriver).Value('CARGO');
CadConfigEstabelecimentoDPPisResp		            := DDT.DriverByName(nomeDriver).Value('PISRESP');
CadConfigEstabelecimentoDPEmail			            := DDT.DriverByName(nomeDriver).Value('EMAIL');
CadConfigEstabelecimentoDPIdConfigMail	        := DDT.DriverByName(nomeDriver).Value('IDCONFIGMAIL');
CadConfigEstabelecimentoDPIdgrupo               := DDT.DriverByName(nomeDriver).Value('IDGRUPO');
end;

{ConfigAdiantamento}
procedure LeDataPoolConfigAdiantamento();
begin
CadConfigEstabelecimentoDPCalcPropFerias		    := DDT.DriverByName(nomeDriver).Value('CALCPROPFERIAS');
CadConfigEstabelecimentoDPPaEntrouAte  	        := DDT.DriverByName(nomeDriver).Value('PAENTROUATE');
CadConfigEstabelecimentoDPPaVoltouAte 	        := DDT.DriverByName(nomeDriver).Value('PAVOLTOUATE');
CadConfigEstabelecimentoDPCalcPropAfasta        := DDT.DriverByName(nomeDriver).Value('CALCPROPAFASTA');
CadConfigEstabelecimentoDPPropAdmis  	          := DDT.DriverByName(nomeDriver).Value('PROPADMIS');
CadConfigEstabelecimentoDPPagaDmAte  	          := DDT.DriverByName(nomeDriver).Value('PAGADMATE');

end;