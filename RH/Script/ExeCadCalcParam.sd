uses
CommonsAll,CommonsObj,VarConsts,DataPoolCadCalcParam,ObjCadCalcParam;

procedure PreencheCadParam();
begin
MapCadCalcParam();
FormAbaPrincCadCalcParam.ActivePageIndex := 0;
{Cadastro}
VerificaConsultaF3Insere(_ModuloFolha,CadCalcParamEBIdCalcReg,CadCalcParamDPIdCalcReg);
VerificaInsere(CadCalcParamEBSequencia,CadCalcParamDPSequencia);
VerificaInsere(CadCalcParamEBParam,CadCalcParamDPParam);
VerificaInsere(CadCalcParamEBDescricao,CadCalcParamDPDescricao);
VerificaInsere(CadCalcParamEBTipo,CadCalcParamDPTipo);
VerificaInsere(CadCalcParamEBInteiras,CadCalcParamDPInteiras);
VerificaInsere(CadCalcParamEBDecimais,CadCalcParamDPDecimais);
VerificaInsere(CadCalcParamEBItensCb,CadCalcParamDPItensCb);
VerificaInsere(CadCalcParamEBMascara,CadCalcParamDPMascara);
VerificaInsere(CadCalcParamEBValPadrao,CadCalcParamDPValPadrao);
VerificaInsere(CadCalcParamEBObrigatorio,CadCalcParamDPObrigatorio);
VerificaInsere(CadCalcParamEBVisibilidade,CadCalcParamDPVisibilidade);
VerificaInsere(CadCalcParamEBGuia,CadCalcParamDPGuia);
VerificaInsere(CadCalcParamEBGuiaDesc,CadCalcParamDPGuiaDesc);
end;

procedure PreencheRelParam();
begin
MapCadCalcParam();
FormAbaPrincCadCalcParam.ActivePageIndex := 1;
{Relacionamento}                                                                                           
VerificaInsere(CadCalcParamEBTabRel,CadCalcParamDPTabRel);
VerificaInsere(CadCalcParamEBIndRel,CadCalcParamDPIndRel);
VerificaInsere(CadCalcParamEBExpRet,CadCalcParamDPExpRet);
end;		


procedure CadastraCalcParam(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Cálculos - Parâmetros');

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadCalcParam(DDTCadastrar.Name);

While not DDTCadastrar.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHCALCREGP');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Cálculo', CadCalcParamDPIdCalcReg );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadCalcParam();
  
  PreencheCadParam();
  PreencheRelParam();
  
  ActSalvar(FormPadraoCadCalcParam);
  ActFechar(FormPadraoCadCalcParam);
  end;
  DDTCadastrar.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirCalcParam(pathData);
var
DDTExcluir : Olevariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Cálculos - Parâmetros');

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(pathData, _Excluir);

LeDataPoolCadCalcParam(DDTExcluir.Name);
while not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHCALCREGP');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Cálculo', CadCalcParamDPIdCalcReg );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
  ActConsulta(FormTelaConsultaForm); 
  ActExcluir(_ModuloFolha, 'FFormPadraoRHCALCREGP');
  
  ActFechar(FormPadraoCadCalcParam);
  end;
  DDTExcluir.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTExcluir.Name);
end;