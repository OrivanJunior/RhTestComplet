uses CommonsAll,CommonsObj, VarConsts, ObjInconFixoGeral,DataPoolInconFixoGeral;

procedure PreencheCadIncoFixoGeral();
var i;
begin
i:=0;
VerificaInsere(CadIncoFixoGeralEBId,CadIncoFixoGeralDPId);  		
VerificaInsere(CadIncoFixoGeralEBValidaPor,CadIncoFixoGeralDPValidaPor);

if CadIncoFixoGeralEBValidaPor.zText = 'Tipo de Evento' then
begin
MapCadIncoFixoGeral();

PageTabNormalpg.ActivePageIndex := 0;
BtnIncEveFixoGeral.Click;
VerificaClickPreencheGrid(FormIncoFixoGeralGrid,i,'Tipo de Evento',CadIncoFixoGeralDPTipoEvento); 
VerificaClickPreencheGrid(FormIncoFixoGeralGrid,i,'Status de Inconsistencia',CadIncoFixoGeralDPStatusInco); 
ClickColuna(FormIncoFixoGeralGrid,i,'Processamento');

MapColunaProcEve();

if FormTelaColunaProc.Exists then
begin
ActFechar(FormTelaColunaProc);
end;

BtnSaveEveFixoGeral.Click;

Inc(i);

end;

if CadIncoFixoGeralEBValidaPor.zText = 'Código de Evento' then
MapCadIncoFixoGeral();

PageTabNormalpg.ActivePageIndex := 0;
BtnIncEveFixoGeral.Click;
VerificaClickPreencheGrid(FormIncoFixoGeralGrid,i,'Código de Evento',CadIncoFixoGeralDPCodigoEvento); 
VerificaClickPreencheGrid(FormIncoFixoGeralGrid,i,'Status de Inconsistencia',CadIncoFixoGeralDPStatusInco); 
ClickColuna(FormIncoFixoGeralGrid,i,'Processamento');

MapColunaProcEve();

if FormTelaColunaProc.Exists then
begin
ActFechar(FormTelaColunaProc);
end;

BtnSaveEveFixoGeral.Click;

Inc(i);

end;


procedure PreencheColunaProc();
begin

MapColunaProcEve();

VerificaInsere(CadTelaColunaProcEBTipoEve,CadTelaColunaProcDPTipoEve);
VerificaInsere(CadTelaColunaProcEBDescricao,CadTelaColunaProcDPDescricao);

end;


procedure CadastraIncofixoGeral(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Inconsistências do Fixo Geral');

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadIncoFixoGeral(DDTCadastrar.Name);

While not DDTCadastrar.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'fRHFIXOGERALINC');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Cód. Fixo Geral',CadIncoFixoGeralDPId);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadIncoFixoGeral();
//  
//  PreencheCadIncoFixoGeral();
//  
//  ActSalvar(FormPadraoFixoGeralInc);  SEM PERMISÃO PARA EXCLUIR

  ActFechar(FormPadraoFixoGeralInc);
  end;
  DDTCadastrar.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;


procedure ExcluirIncofixoGeral(PathData);
var
DDTExcluir : OleVariant;
begin
AcessaItem(_ModuloFolha,'Cadastros Gerais', 'Inconsistências do Fixo Geral');

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(PathData, _Excluir);

LeDataPoolCadCbo(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'fRHFIXOGERALINC');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Cód. Fixo Geral',CadIncoFixoGeralDPId);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin  
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadIncoFixoGeral();
  
  ActExcluir(_ModuloFolha, 'fRHFIXOGERALINC');
  ActFechar(FormPadraoFixoGeralInc);
  end;
  DDTExcluir.Next;
end;
ActFechar(FormTelaConsultaForm);
DDT.CloseDriver(DDTExcluir.Name);
end;
 