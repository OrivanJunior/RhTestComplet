var 
{Info normais}   
CadEventosDPCodigo,CadEventosDPIdEventos,
CadEventosDPSequencia,CadEventosDPInativo,
CadEventosDPSubseq,CadEventosDPDtInativo,
CadEventosDPUserId,CadEventosDPDescricao,
CadEventosDPCodHomolog,CadEventosDPInvisivel,
CadEventosDPOpEvento,CadEventosDPIdTipo,
CadEventosDPIdEvecalc,

{Valida Situações}
ValidaEventosDPCodSit,ValidaEventosDPCodCau,ValidaEventosDPCodVin,ValidaEventosDPCodProc,
ValidaEventosDPCodTurn,ValidaEventosDPCodCat,ValidaEventosDPCodConf, 

{Incidências}
IncidEventosDPCod, ParamEventosDPCod,
 
{Validações - Conf Dirf Rendimentos}
CadDirfRendiDPCampo,CadDirfRendiDPLinha,CadDirfRendiDPFormula,

{Esocial - Informações gerais}
CadESocDPIdeventonat,CadESocDPObservacao,CadESocDPIndApurIrrf,

TributDPEstab,TributDPInss,TributDPIrrf,TributDPFgts,TributDPCSind,
{Parâmetros}
CadParamDPValorCalcPadrao,CadParamDPValorBaseModo,CadParamDPValorBaseBase,CadParamDPValorBaseTipo,CadParamDPValorBaseMeses,
CadParamDPValorBaseMes,CadParamDPValorBaseAno,CadParamDPValorHora,CadParamDPCalculaReducao,
CadParamDPAdicionalInforme,CadParamDPJornadaAConsiderar,CadParamDPProporcionalidadeBase,
{Param outros}
CadParamDPEhAvisoPrevio,CadParamDPEhEstabilidade,
{Contabiliza}	          
CadEventosDPContabiliza,

{ Filtro Estab } 
FiltroEstabTipo,  
FiltroEstabValor, 
FiltroEventoTipo,
FiltroEventoValor,
                 
{ Filtro eVENTO }
FiltroEmpreTipo, 
FiltroEmpreValor  : Olevariant;

procedure LeDataPoolInfoNormais(nomeDriver);
begin
{Info normais}
CadEventosDPIdEventos  		  := DDT.DriverByName(nomeDriver).Value('IDEVENTOS');
CadEventosDPSequencia       := DDT.DriverByName(nomeDriver).Value('SEQUENCIA');
CadEventosDPInativo         := DDT.DriverByName(nomeDriver).Value('INATIVO');
CadEventosDPSubseq          := DDT.DriverByName(nomeDriver).Value('SUBSEQ');
CadEventosDPDtInativo       := DDT.DriverByName(nomeDriver).Value('DTINATIVO');
CadEventosDPUserId          := DDT.DriverByName(nomeDriver).Value('USERID');    
CadEventosDPDescricao       := DDT.DriverByName(nomeDriver).Value('DESCRICAO');
CadEventosDPCodHomolog      := DDT.DriverByName(nomeDriver).Value('CODHOMOLOG');
CadEventosDPInvisivel       := DDT.DriverByName(nomeDriver).Value('INVISIVEL');
CadEventosDPOpEvento        := DDT.DriverByName(nomeDriver).Value('OPEVENTO');
CadEventosDPIdTipo          := DDT.DriverByName(nomeDriver).Value('IDTIPO');
CadEventosDPIdEvecalc       := DDT.DriverByName(nomeDriver).Value('IDEVECALC');
end;

procedure LeDataPoolValidacoes(nomeDriver);
begin
ValidaEventosDPCodSit          := DDT.DriverByName(nomeDriver).Value('CODIGOSIT');
ValidaEventosDPCodCau          := DDT.DriverByName(nomeDriver).Value('CODIGOCAU');
ValidaEventosDPCodVin          := DDT.DriverByName(nomeDriver).Value('CODIGOVIN');
ValidaEventosDPCodProc         := DDT.DriverByName(nomeDriver).Value('CODIGOPROC');
ValidaEventosDPCodTurn         := DDT.DriverByName(nomeDriver).Value('CODIGOTURN');
ValidaEventosDPCodCat          := DDT.DriverByName(nomeDriver).Value('CODIGOCAT');
end;

procedure LeDataPoolDirfRendimentos(nomeDriver);
begin 
{Validações - Conf Dirf Rendimentos}
CadDirfRendiDPCampo			    := DDT.DriverByName(nomeDriver).Value('CAMPO');	
CadDirfRendiDPLinha		      := DDT.DriverByName(nomeDriver).Value('LINHA');
CadDirfRendiDPFormula	      := DDT.DriverByName(nomeDriver).Value('FORMULA');
end;

procedure LeDataPoolIncid(nomeDriver);
begin
IncidEventosDPCod              := DDT.DriverByName(nomeDriver).Value('CODIGOINCID');
end;

procedure LeDataPoolContab(nomeDriver);
begin
{Contabiliza}	          
CadEventosDPContabiliza		  := DDT.DriverByName(nomeDriver).Value('CONTABILIZA');
end;

procedure LeDataPoolParamValorBase(nomeDriver);
begin
CadParamDPValorCalcPadrao       := DDT.DriverByName(nomeDriver).Value('CALCPADRAO');
CadParamDPValorBaseModo			    := DDT.DriverByName(nomeDriver).Value('BASEMODO');		
CadParamDPValorBaseBase			    := DDT.DriverByName(nomeDriver).Value('BASEBASE');	
CadParamDPValorBaseTipo			    := DDT.DriverByName(nomeDriver).Value('BASETIPO');	
CadParamDPValorBaseMeses		    := DDT.DriverByName(nomeDriver).Value('BASEMESES');	
CadParamDPValorBaseMes			    := DDT.DriverByName(nomeDriver).Value('BASEMES');	
CadParamDPValorBaseAno			    := DDT.DriverByName(nomeDriver).Value('BASEANO');	
CadParamDPValorHora				      := DDT.DriverByName(nomeDriver).Value('HORA');	
CadParamDPCalculaReducao		    := DDT.DriverByName(nomeDriver).Value('REDUCAO');	

end;

procedure LeDataPoolParamAdInforme(nomeDriver);
begin
CadParamDPAdicionalInforme		  := DDT.DriverByName(nomeDriver).Value('ADICIONALINFORME');
end;

procedure LeDataPoolParamOutros(nomeDiver);
begin
CadParamDPEhAvisoPrevio    := DDT.DriverByName(nomeDiver).Value('EHAVISOPREVIO');           
CadParamDPEhEstabilidade   := DDT.DriverByName(nomeDiver).Value('EHESTABILIDADE');    
end;

procedure LeDataPoolParamProporcional(nomeDriver); 
begin
CadParamDPProporcionalidadeBase	:= DDT.DriverByName(nomeDriver).Value('PROPORCIONALIDADEBASE');
end;

procedure LeDataPoolParamJornConsiderar(nomeDriver);
begin
CadParamDPJornadaAConsiderar 	  := DDT.DriverByName(nomeDriver).Value('JORNADAACONSIDERAR');
end;

procedure LeDataPoolESocial(nomeDriver);
begin
{Esocial - Informações gerais}
CadESocDPIdeventonat		    := DDT.DriverByName(nomeDriver).Value('IDEVENTONAT');
CadESocDPObservacao			    := DDT.DriverByName(nomeDriver).Value('OBSERVACAO');
CadESocDPIndApurIrrf		    := DDT.DriverByName(nomeDriver).Value('INDAPURIRRF');

TributDPEstab     := DDT.DriverByName(nomeDriver).Value('ESTAB');
TributDPInss      := DDT.DriverByName(nomeDriver).Value('INSS');
TributDPIrrf      := DDT.DriverByName(nomeDriver).Value('IRFF');
TributDPFgts      := DDT.DriverByName(nomeDriver).Value('FGTS');
TributDPCSind     := DDT.DriverByName(nomeDriver).Value('C SIND');

end;


procedure LeDataPoolInclusaoFixoGeral(nomeDriver);
begin
  { Filtro Estab }
  FiltroEstabTipo  := DDT.DriverByName(nomeDriver).Value('TIPOESTAB');
  FiltroEstabValor := DDT.DriverByName(nomeDriver).Value('ESTABVALOR');
        
  { Filtro eVENTO }
  FiltroEventoTipo  := DDT.DriverByName(nomeDriver).Value('TIPOEVENTO');
  FiltroEventoValor := DDT.DriverByName(nomeDriver).Value('EVENTOVALOR');
  { Filtro de DADOS PESSOAIS }
end;
