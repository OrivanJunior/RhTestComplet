  uses
  CommonsAll, VarConsts, CommonsObj, ObjCadConfiguracaoEstab,DataPoolCadConfiguracaoEstab;
  
procedure PreencherCadastro();
begin
  MapCadConfigEstabelecimento();
  
  EstabFormPage.ActivePageIndex := 0;
  
  VerificaInsere(CadConfigEstabelecimentoEBCei,CadConfigEstabelecimentoDPCei);				   
  VerificaInsere(CadConfigEstabelecimentoEBIncra,CadConfigEstabelecimentoDPIncra);			   
  VerificaInsere(CadConfigEstabelecimentoEBCpf,CadConfigEstabelecimentoDPCpf);				   
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdPesResp,CadConfigEstabelecimentoDPIdPesResp);	 
  VerificaInsere(CadConfigEstabelecimentoEBCargo,CadConfigEstabelecimentoDPCargo);			   
  VerificaInsere(CadConfigEstabelecimentoEBPisResp ,CadConfigEstabelecimentoDPPisResp);  		 
  VerificaInsere(CadConfigEstabelecimentoEBEmail,CadConfigEstabelecimentoDPEmail); 			 
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdConfigMail,CadConfigEstabelecimentoDPIdConfigMail);
  VerificaConsultaF3Insere(_ModuloFolha,CadConfigEstabelecimentoEBIdgrupo,CadConfigEstabelecimentoDPIdgrupo);
end;

procedure PreencherCalculo();
begin
  MapFormEstab();
  
  EstabFormPage.ActivePageIndex := 1;

  VerificaInsere(CadConfigEstabelecimentoEBCalcPropFerias,CadConfigEstabelecimentoDPCalcPropFerias);
  VerificaInsere(CadConfigEstabelecimentoEBPaEntrouAte,CadConfigEstabelecimentoDPPaEntrouAte);  	 
  VerificaInsere(CadConfigEstabelecimentoEBPaVoltouAte,CadConfigEstabelecimentoDPPaVoltouAte );	 
  VerificaInsere(CadConfigEstabelecimentoEBCalcPropAfasta,CadConfigEstabelecimentoDPCalcPropAfasta); 
  VerificaInsere(CadConfigEstabelecimentoEBPropAdmis,CadConfigEstabelecimentoDPPropAdmis);  	 
  VerificaInsere(CadConfigEstabelecimentoEBPagaDmAte,CadConfigEstabelecimentoDPPagaDmAte);
end;  
  
procedure PreencheFgtsInss();
begin

end;

procedure PreencherConfigContabeis();
begin

end;

procedure PreencherConfigFinanceiro();
begin

end;

procedure PreencherAvisoPrevio();
begin

end;

procedure PreencherListPendencia();
begin

end;



procedure PreencherDadosCadastrais(pathData);
Var 
  DDTCadastrar: OleVariant;
begin

  DDTCadastrar := CarregaDDT(pathData, 'Dados Cadastrais');
  
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  Delay(15000);
 
  leDataPoolDadosCadastrais(DDTCadastrar.Name);
  MapCadConfigEstabelecimento(); 
  PreencherCadastro();
end;


procedure PreencheTabConfCalculo(pathData);
var
  DDTCalculo: Olevariant;
begin
  
  
  DDTCalculo := CarregaDDT(pathData, 'Calculos'); 
 
  LeDataPoolConfigAdiantamento(DDTCalculo.Name);
  MapCadConfigAdiantamento();
  
  PreencherCalculo();
  
end;

{_______________________________________________________________________________________}

procedure CadastraConfigEstab(pathData);
var
  DDTConfEstab: OleVariant;
begin
  AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  Delay(15000);
  
  MapGridConsulta(_ModuloPonto);
  
  DDTConfEstab := CarregaDDT(pathData, _Cadastrar);
  
  LeDataPoolConfEstab(DDTConfEstab.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloPonto, 'FRhFilial');
      
  FiltraGrid(_ModuloPonto, 'FBRowseCds', 'BGrid', 'Estab.', ConfEstabDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
    ActIncluir(FormTelaConsultaForm);
    
    MapConfigEstab();
  
    PreencheDadosCadastrais();
  
    PreencheConfGeraisPonto();
  
    PreencheEventosExportacao();
  
    PreencheRepEstab();
  
    PreencheListagemPendencias();
  
    ActSalvar(ConfEstabForm);
  
    ActFechar(ConfEstabForm);
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTConfEstab.Name);
end;

procedure AlteraConfigEstab(pathData);
var
  DDTConfEstab: OleVariant;
begin
  AcessaItem(_ModuloPonto, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  
  MapGridConsulta(_ModuloPonto);
  
  DDTConfEstab := CarregaDDT(pathData, _Alterar);
  
  LeDataPoolConfEstab(DDTConfEstab.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloPonto, 'FRhFilial');
      
  FiltraGrid(_ModuloPonto, 'FBRowseCds', 'BGrid', 'Estab.', ConfEstabDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
    ActConsulta(FormTelaConsultaForm);
    
    MapConfigEstab();
  
    PreencheDadosCadastrais();
  
    PreencheConfGeraisPonto();
  
    PreencheEventosExportacao();
  
    PreencheRepEstab();
  
    PreencheListagemPendencias();
  
    ActSalvar(ConfEstabForm);
  
    ActFechar(ConfEstabForm);
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTConfEstab.Name);
end;

procedure ExcluiConfigEstab(pathData);
var
  DDTConfEstab: OleVariant;
begin
  AcessaItem(_ModuloPonto, 'Cadastros Específicos', 'Configuração do Estabelecimento');
  
  MapGridConsulta(_ModuloPonto);
  
  DDTConfEstab := CarregaDDT(pathData, _Excluir);
  
  LeDataPoolConfEstab(DDTConfEstab.Name);
  
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloPonto, 'FRhFilial');
      
  FiltraGrid(_ModuloPonto, 'FBRowseCds', 'BGrid', 'Estab.', ConfEstabDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
    ActConsulta(FormTelaConsultaForm);
    
    MapConfigEstab();
  
    ActExcluir(_ModuloPonto, 'FRhFilial');
    
    if (Aliases.Ponto.dlgWarning.Exists) then
      Aliases.Ponto.dlgWarning.Warning.CtrlNotifySink.btnYes.Click();
        
    ActFechar(ConfEstabForm);
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTConfEstab.Name);
end;