{Script para executar o Processo de GRRF Elerônica
 Módulo: Padrao
 Autor: Camila Braatz da Rocha
 Data: 05/07/2021}
uses
  DataPoolGRRFEletronica, ObjGRRFEletronica, CommonsAll, CommonsObj, VarConsts;
  
Const
  _Todos = 'TO';
  _TodosEmpresa = 'TE';
  _Selecionados = 'SC';
  _Especifico = 'ES';
  
procedure AcessaProcGRRFEletronica();
begin
  AcessaItem(_ModuloFolha, 'Processos', 'SEFIP/GRRF/PIS', 'GRRF Eletrônica'); 
end;

procedure FiltraEstab();
begin
  if (FiltroEstabTipo = _Especifico) then
  begin
    GRRFEletronicaWhEstabEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, GRRFEletronicaWhEstabEspecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Específico, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _TodosEmpresa) then
  begin
    GRRFEletronicaWhEstabTodosEmp.ClickButton;
    VerificaInsere(GRRFEletronicaWhEstabTodosEmpCampo, FiltroEstabValor);  
    Log.Checkpoint('Selecionado Estabelecimentos - Todos da Empresa: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Selecionados) then
  begin
    GRRFEletronicaWhEstabSelec.ClickButton;
    VerificaInsere(GRRFEletronicaWhEstabSelecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Selecionados, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Todos) then
  begin
    GRRFEletronicaWhEstabTodos.ClickButton;
    Log.Checkpoint('Selecionado Estabelecimentos - Todos');
  end;  
end;

procedure FiltraEmpregados();
begin
  if (GRRFEletronicaWhEmpreTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcGRRF.pg.tsSelecao.SB_Selecao.whEmpregado.whEmpregado10.Click();
    
  if (FiltroEmpreTipo = _Especifico) then
  begin
    GRRFEletronicaWhEmpreEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, GRRFEletronicaWhEmpreEspecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Específico, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Selecionados) then
  begin
    GRRFEletronicaWhEmpreSelec.ClickButton;
    VerificaInsere(GRRFEletronicaWhEmpreSelecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Selecionados, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Todos) then
  begin
    GRRFEletronicaWhEmpreTodos.ClickButton;
    Log.Checkpoint('Selecionado Empregados - Todos');
  end;
end;

procedure DadosAdicionais();
begin
  if (GRRFEletronicaWhDadosMesResc.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcGRRF.pg.tsSelecao.SB_Selecao.whDados.whDados10.Click();
    
  PreencheDatas(GRRFEletronicaWhDadosMesResc, FiltroMesResc);
  PreencheDatas(GRRFEletronicaWhDadosDataRec, FiltroDataRec);
  VerificaInsere(GRRFEletronicaWhDadosLocalGrav, FiltroLocalGrav);
  VerificaInsere(GRRFEletronicaWhDadosTipoGRRF, FiltroTipoGRRF);  
end;

procedure FechaMensagemProcessoConcluido();
begin  
  if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
  begin
    Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();
  end;
end;

procedure ExecutaGRRFEletronica(pathData);
var 
  DDTGRRF: OleVariant;
  MensagemInativa: boolean;
begin
  MensagemInativa := True;
  
  AcessaProcGRRFEletronica();

  MapGRRFEletronica();

  DDTGRRF := CarregaDDT(pathData, 'Filtro');
  
  LeDataPoolGRRFEletronica(DDTGRRF.Name);

  FiltraEstab();

  FiltraEmpregados();
  
  DadosAdicionais();

  btnExecutar.Click();

  while (MensagemInativa) do
  begin
    Delay(5000);
    if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
    begin
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();     
    
      ActFechar(FormGRRFEletronica);
      
      MensagemInativa := false;
    end
    else if (Aliases.Folha.FVsErrorDlg.Visible) then
    begin
      Log.Warning('Erro, verifique as informações');
      Aliases.Folha.FVsErrorDlg.ButtonPanel.OKBtn.Click();
      ActFechar(FormGRRFEletronica);
      MensagemInativa := false;
    end
  end;  
  ValidaArquivos('C:\TEMP\GRRF\GRRF_MODELO.RE', 'C:\TEMP\GRRF\GRRF_MODELO_ORACLE.RE', 'C:\TEMP\GRRF\GRRF.RE');
  DDT.CloseDriver(DDTGRRF.Name);
end;
