uses
  CommonsAll,
  CommonsObj,
  DataPoolPgtoPrevBB,
  ObjPgtoPrevBB,
  VarConsts;
{Script para executar o Processo de Pagamento Previdência Eletrônica - Banco do Brasil
 Módulo: Padrao
 Autor: Camila Braatz da Rocha
 Data: 14/07/2021}

  
Const
  _Todos = 'TO';
  _TodosMatriculasa = 'TE';
  _Selecionados = 'SC';
  _Especifico = 'ES';
  
procedure AcessaPgtoPrevBB();
begin
  AcessaItem(_ModuloFolha, 'Processos', 'Pagamento Eletrônico', 'Banco do Brasil', 'Previdência Privada'); 
end;

procedure FiltraEstab();
begin
  if (FiltroEstabTipo = _Especifico) then
  begin
    FormPgtoPrevBBWhEstabEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormPgtoPrevBBWhEstabEspecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Específico, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _TodosMatriculasa) then
  begin
    FormPgtoPrevBBWhEstabTodosEmp.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhEstabTodosEmpCampo, FiltroEstabValor);  
    Log.Checkpoint('Selecionado Estabelecimentos - Todos da Matriculasa: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Selecionados) then
  begin
    FormPgtoPrevBBWhEstabSelec.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhEstabSelecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Selecionados, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Todos) then
  begin
    FormPgtoPrevBBWhEstabTodos.ClickButton;
    Log.Checkpoint('Selecionado Estabelecimentos - Todos');
  end;
end;

procedure FiltraMatricula();
begin
  if (FormPgtoPrevBBWhMatriculaTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcPgtoPrevBB.pg.tsSelecao.SB_Selecao.whMatricula.whMatricula10.Click();
    
  if (FiltroMatriculaTipo = _Especifico) then
  begin
    FormPgtoPrevBBWhMatriculaEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormPgtoPrevBBWhMatriculaEspecCampo, FiltroMatriculaValor);
    Log.Checkpoint('Selecionado Matricula - Específico, com valor: ' + FiltroMatriculaValor);
  end
  else if (FiltroMatriculaTipo = _Selecionados) then
  begin
    FormPgtoPrevBBWhMatriculaSelec.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhMatriculaSelecCampo, FiltroMatriculaValor);
    Log.Checkpoint('Selecionado Matricula - Selecionados, com valor: ' + FiltroMatriculaValor);
  end
  else if (FiltroMatriculaTipo = _Todos) then
  begin
    FormPgtoPrevBBWhMatriculaTodos.ClickButton;
    Log.Checkpoint('Selecionado Matricula - Todos');
  end;
end;

procedure FiltraLocais();
begin
  if (FormPgtoPrevBBWhLocaisTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcPgtoPrevBB.pg.tsSelecao.SB_Selecao.whLocais.whLocais10.Click();
    
  if (FiltroLocalTipo = _Especifico) then
  begin
    FormPgtoPrevBBWhLocaisEspec.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhLocaisEspecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Específico, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Selecionados) then
  begin
    FormPgtoPrevBBWhLocaisSelec.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhLocaisSelecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Selecionados, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Todos) then
  begin
    FormPgtoPrevBBWhLocaisTodos.ClickButton;
    Log.Checkpoint('Selecionado Locais - Todos');
  end;
end;

procedure FiltraData();
begin
  if (FormPgtoPrevBBWhDataIni.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcPgtoPrevBB.pg.tsSelecao.SB_Selecao.whDatas.whDatas10.Click();
    
  PreencheDatas(FormPgtoPrevBBWhDataIni, FiltroDataIni); 
  PreencheDatas(FormPgtoPrevBBWHDataFin, FiltroDataFin);
  Log.Checkpoint('Intervalo de Datas: ' + FiltroDataIni + ' à ' + FiltroDataFin);
end;

procedure FiltraSituacao();
begin
  if (FormPgtoPrevBBWhSituacoesTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcPgtoPrevBB.pg.tsSelecao.SB_Selecao.whSituacoes.whSituacoes10.Click();
    
  if (FiltroSituacaoTipo = _Especifico) then
  begin
    FormPgtoPrevBBWhSituacoesEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormPgtoPrevBBWhSituacoesEspecCampo, FiltroSituacaoValor);
    Log.Checkpoint('Selecionado Situacoes - Específico, com valor: ' + FiltroSituacaoValor);
  end
  else if (FiltroSituacaoTipo = _Selecionados) then
  begin
    FormPgtoPrevBBWhSituacoesSelec.ClickButton;
    VerificaInsere(FormPgtoPrevBBWhSituacoesSelecCampo, FiltroSituacaoValor);
    Log.Checkpoint('Selecionado Situacoes - Selecionados, com valor: ' + FiltroSituacaoValor);
  end
  else if (FiltroSituacaoTipo = _Todos) then
  begin
    FormPgtoPrevBBWhSituacoesTodos.ClickButton;
    Log.Checkpoint('Selecionado Situacoes - Todos');
  end;
end;

procedure DadosAdicionais();
begin
  if (FormPgtoPrevBBWhDataRemessa.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcPgtoPrevBB.pg.tsSelecao.SB_Selecao.whDados.whDados10.Click();
    
  PreencheDatas(FormPgtoPrevBBWhDataRemessa, FiltroDataRemessa);
  VerificaInsere(FormPgtoPrevBBWhModeloArq, FiltroModeloArq);
  VerificaInsere(FormPgtoPrevBBWhCodContrib, FiltroCodContrib);
  VerificaInsere(FormPgtoPrevBBWhLocalGrav, FiltroLocalGrav);
  VerificaInsere(FormPgtoPrevBBWhCodEstab, FiltroCodEstab);
  VerificaInsere(FormPgtoPrevBBWhCodPatroc, FiltroCodPatroc);
  VerificaInsere(FormPgtoPrevBBWhPercPatroc, FiltroPercPatroc);
end;

procedure FechaMensagemProcessoConcluido();
var 
  TelaAtencao, BtnOk: OleVariant;
begin
  if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
  begin
    TelaAtencao := Aliases.Folha.Window('#32770', 'Processo Concluído!', 1);
    BtnOk       := TelaAtencao.Window('Button', 'OK', 1);
    
    BtnOk.Click();  
  end;
end;

procedure ExecutaPgtoPrevBB(pathData);
var 
  DDTPgtoPrevBB: OleVariant;
  MensagemInativa: boolean;
begin
  MensagemInativa := True;
  
  AcessaPgtoPrevBB();

  MapPgtoPrevBB();
  DDTPgtoPrevBB := CarregaDDT(pathData, 'Filtro');
  
  LeDataPoolPgtoPrevBB(DDTPgtoPrevBB.Name);

  FiltraEstab();
  
  FiltraMatricula();
  
  FiltraLocais();

  FiltraData();
    
  FiltraSituacao();
  
  DadosAdicionais();

  btnExecutar.Click();

  while (MensagemInativa) do
  begin
    Delay(5000);
    if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
    begin
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();     
    
      ActFechar(FormPgtoPrevBB);
      
      MensagemInativa := false;
    end
    else if (Aliases.Folha.FVsErrorDlg.Visible) then
    begin
      Log.Warning('Erro, verifique as informações');
      Aliases.Folha.FVsErrorDlg.ButtonPanel.OKBtn.Click();
      ActFechar(FormPgtoPrevBB);
      MensagemInativa := false;
    end
  end;   
  ValidaArquivos('C:\TEMP\PAGAMENTO ELETRÔNICO\BANCO DO BRASIL\PREVIDÊNCIA PRIVADA\PAGAMENTO_PREVIDENCIA_BB_MODELO.dat', 
                 'C:\TEMP\PAGAMENTO ELETRÔNICO\BANCO DO BRASIL\PREVIDÊNCIA PRIVADA\PAGAMENTO_PREVIDENCIA_BB_MODELO_ORACLE.dat', 
                 'C:\TEMP\PAGAMENTO ELETRÔNICO\BANCO DO BRASIL\PREVIDÊNCIA PRIVADA\p000121998005674202101.dat');
  DDT.CloseDriver(DDTPgtoPrevBB.Name);
end;