uses
  CommonsAll,
  CommonsObj,
  DataPoolExpFinTxt,
  ObjExpFinTxt,
  VarConsts;
{Script para executar o Processo de Exportação Financeira Arquivo Texto
 Módulo: Padrao
 Autor: Camila Braatz da Rocha
 Data: 14/07/2021}

  
Const
  _Todos = 'TO';
  _TodosEmpresa = 'TE';
  _Selecionados = 'SC';
  _Especifico = 'ES';
  
procedure AcessaExpFinTxt();
begin
  AcessaItem(_ModuloFolha, 'Processos', 'Exportação', 'Exportação Financeira (Arq. Texto)'); 
end;

procedure FiltraEstab();
begin
  if (FiltroEstabTipo = _Especifico) then
  begin
    FormExpFinTxtWhEstabEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpFinTxtWhEstabEspecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Específico, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _TodosEmpresa) then
  begin
    FormExpFinTxtWhEstabTodosEmp.ClickButton;
    VerificaInsere(FormExpFinTxtWhEstabTodosEmpCampo, FiltroEstabValor);  
    Log.Checkpoint('Selecionado Estabelecimentos - Todos da Empresa: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Selecionados) then
  begin
    FormExpFinTxtWhEstabSelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhEstabSelecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Selecionados, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Todos) then
  begin
    FormExpFinTxtWhEstabTodos.ClickButton;
    Log.Checkpoint('Selecionado Estabelecimentos - Todos');
  end;
end;

procedure FiltraEmpregados();
begin
  if (FormExpFinTxtWhEmpreTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whEmpregados.whEmpregados10.Click();
    
  if (FiltroEmpreTipo = _Especifico) then
  begin
    FormExpFinTxtWhEmpreEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpFinTxtWhEmpreEspecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Específico, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Selecionados) then
  begin
    FormExpFinTxtWhEmpreSelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhEmpreSelecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Selecionados, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Todos) then
  begin
    FormExpFinTxtWhEmpreTodos.ClickButton;
    Log.Checkpoint('Selecionado Empregados - Todos');
  end;
end;

procedure FiltraLocais();
begin
  if (FormExpFinTxtWhLocaisTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whLocais.whLocais10.Click();
    
  if (FiltroLocalTipo = _Especifico) then
  begin
    FormExpFinTxtWhLocaisEspec.ClickButton;
    VerificaInsere(FormExpFinTxtWhLocaisEspecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Específico, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Selecionados) then
  begin
    FormExpFinTxtWhLocaisSelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhLocaisSelecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Selecionados, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Todos) then
  begin
    FormExpFinTxtWhLocaisTodos.ClickButton;
    Log.Checkpoint('Selecionado Locais - Todos');
  end;
end;

procedure FiltraData();
begin
  if (FormExpFinTxtWhDataIni.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whDatas.whDatas10.Click();
    
  PreencheDatas(FormExpFinTxtWhDataIni, FiltroDataIni); 
  PreencheDatas(FormExpFinTxtWHDataFin, FiltroDataFin);
  Log.Checkpoint('Intervalo de Datas: ' + FiltroDataIni + ' à ' + FiltroDataFin);
end;

procedure FiltraProcessamentos();
begin
  if (FormExpFinTxtWhProcTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whProcessamentos.whProcessamentos10.Click();
    
  if (FiltroProcTipo = _Especifico) then
  begin
    FormExpFinTxtWhProcEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpFinTxtWhProcEspecCampo, FiltroProcValor);
    Log.Checkpoint('Selecionado Processamentos - Específico, com valor: ' + FiltroProcValor);
  end
  else if (FiltroProcTipo = _Selecionados) then
  begin
    FormExpFinTxtWhProcSelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhProcSelecCampo, FiltroProcValor);
    Log.Checkpoint('Selecionado Processamentos - Selecionados, com valor: ' + FiltroProcValor);
  end
  else if (FiltroProcTipo = _Todos) then
  begin
    FormExpFinTxtWhProcTodos.ClickButton;
    Log.Checkpoint('Selecionado Processamentos - Todos');
  end;
end;

procedure FiltraPrestadores();
begin
  if (FormExpFinTxtWhPrestTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whPrestador.whPrestador10.Click();
    
  if (FiltroPrestTipo = _Especifico) then
  begin
    FormExpFinTxtWhPrestEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpFinTxtWhPrestEspecCampo, FiltroPrestValor);
    Log.Checkpoint('Selecionado Prestador - Específico, com valor: ' + FiltroPrestValor);
  end
  else if (FiltroPrestTipo = _Selecionados) then
  begin
    FormExpFinTxtWhPrestSelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhPrestSelecCampo, FiltroPrestValor);
    Log.Checkpoint('Selecionado Prestador - Selecionados, com valor: ' + FiltroPrestValor);
  end
  else if (FiltroPrestTipo = _Todos) then
  begin
    FormExpFinTxtWhPrestTodos.ClickButton;
    Log.Checkpoint('Selecionado Prestador - Todos');
  end;
end;

procedure FiltraRPA();
begin
  if (FormExpFinTxtWhRPATodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whRPA.whRPA10.Click();
    
  if (FiltroRPATipo = _Especifico) then
  begin
    FormExpFinTxtWhRPAEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpFinTxtWhRPAEspecCampo, FiltroRPAValor);
    Log.Checkpoint('Selecionado RPAador - Específico, com valor: ' + FiltroRPAValor);
  end
  else if (FiltroRPATipo = _Selecionados) then
  begin
    FormExpFinTxtWhRPASelec.ClickButton;
    VerificaInsere(FormExpFinTxtWhRPASelecCampo, FiltroRPAValor);
    Log.Checkpoint('Selecionado RPAador - Selecionados, com valor: ' + FiltroRPAValor);
  end
  else if (FiltroRPATipo = _Todos) then
  begin
    FormExpFinTxtWhRPATodos.ClickButton;
    Log.Checkpoint('Selecionado RPAador - Todos');
  end;
end;

procedure DadosAdicionais();
begin
  if (FormExpFinTxtWhDataEmissao.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpFinTxt.pg.tsSelecao.SB_Selecao.whDados.whDados10.Click();
    
  PreencheDatas(FormExpFinTxtWhDataEmissao, FiltroDataEmissao);
  PreencheDatas(FormExpFinTxtWhDataVenc, FiltroDataVenc);
  VerificaInsere(FormExpFinTxtWhCodPort, FiltroCodPort);
  VerificaInsere(FormExpFinTxtWhCodMoeda, FiltroCodMoeda);
  VerificaInsere(FormExpFinTxtWhCodSitua, FiltroCodSitua);
  VerificaInsere(FormExpFinTxtWhSufixo, FiltroSufixo);
  VerificaInsere(FormExpFinTxtWhHistorico, FiltroHistorico);
  VerificaInsere(FormExpFinTxtWhLocalGrav, FiltroLocalGrav);
  VerificaInsere(FormExpFinTxtWhSobreDarf, FiltroSobreDarf);
  VerificaInsere(FormExpFinTxtWhSobreFGTS, FiltroSobreFGTS);
  VerificaInsere(FormExpFinTxtWhSobreGPSFun, FiltroSobreGPSFun);
  VerificaInsere(FormExpFinTxtWhGeraValUni, FiltroGeraValUni);
  VerificaInsere(FormExpFinTxtWhCodObra, FiltroCodObra);
  VerificaInsere(FormExpFinTxtWhSobreGPS, FiltroSobreGPS);
  VerificaInsere(FormExpFinTxtWhSobreGPS13, FiltroSobreGPS13);
  VerificaInsere(FormExpFinTxtWhSobreGPSFat, FiltroSobreGPSFat);
  VerificaInsere(FormExpFinTxtWhNomeEmpregado, FiltroNomeEmpregado);
  VerificaInsere(FormExpFinTxtWhSobreRPA, FiltroSobreRPA);
  VerificaInsere(FormExpFinTxtWhAnoGPS13, FiltroAnoGPS13);
  VerificaInsere(FormExpFinTxtWhGerarValResc, FiltroGerarValResc);
  VerificaInsere(FormExpFinTxtWhSobreEventos, FiltroSobreEventos);
  VerificaInsere(FormExpFinTxtWhDupConsolid, FiltroDupConsolid);
end;

procedure FechaMensagemProcessoConcluido();
var 
  TelaAtencao, BtnOk: OleVariant;
begin
  if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 120000).Exists) then
  begin
    TelaAtencao := Aliases.Folha.Window('#32770', 'Processo Concluído!', 1);
    BtnOk       := TelaAtencao.Window('Button', 'OK', 1);
    
    BtnOk.Click();  
  end;
end;

procedure ExecutaExpFinTxt(pathData);
var 
  MensagemInativa: boolean;
begin
  MensagemInativa := True;
  
  AcessaExpFinTxt();

  MapExpFinTxt();

  LeDataPoolExpFinTxt(pathData);

  FiltraEstab();
  
  FiltraEmpregados();
  
  FiltraLocais();

  FiltraData();
  
  FiltraProcessamentos();
  
  FiltraPrestadores();
  
  FiltraRPA();
  
  DadosAdicionais();

  btnExecutar.Click();
  
  while (MensagemInativa) do
  begin
    Delay(5000);
    if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
    begin
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();

      btnSalvar.Click();
      
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();      
    
      ActFechar(FormExpFinTxt);
      
      MensagemInativa := false;
    end
    else if (Aliases.Folha.FVsErrorDlg.Visible) then
    begin
      Log.Warning('Erro, verifique as informações');
      Aliases.Folha.FVsErrorDlg.ButtonPanel.OKBtn.Click();
      ActFechar(FormExpFinTxt);
      MensagemInativa := false;
    end
  end;  
  ValidaArquivos('C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO FINANCEIRA ARQUIVO TEXTO\EXP_TEXTO_MODELO.txt', 
                 'C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO FINANCEIRA ARQUIVO TEXTO\EXP_TEXTO_MODELO_ORACLE.txt', 
                 'C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO FINANCEIRA ARQUIVO TEXTO\EXPFIN_012021.txt');
end;