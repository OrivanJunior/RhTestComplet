uses
  CommonsAll,
  CommonsObj,
  DataPoolExpSescoopPR,
  ObjExpSescoopPR,
  VarConsts;
{Script para executar o Processo de Exportação SESCOOP/PR
 Módulo: Padrao
 Autor: Camila Braatz da Rocha
 Data: 14/07/2021}

  
Const
  _Todos = 'TO';
  _TodosEmpresa = 'TE';
  _Selecionados = 'SC';
  _Especifico = 'ES';
  
procedure AcessaExpSescoop();
begin
  AcessaItem(_ModuloFolha, 'Processos', 'Exportação', 'Exportação SESCOOP', 'Arquivo SESCOOP/PR'); 
end;

procedure FiltraEstab();
begin
  if (FiltroEstabTipo = _Especifico) then
  begin
    FormExpSescoopWhEstabEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpSescoopWhEstabEspecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Específico, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _TodosEmpresa) then
  begin
    FormExpSescoopWhEstabTodosEmp.ClickButton;
    VerificaInsere(FormExpSescoopWhEstabTodosEmpCampo, FiltroEstabValor);  
    Log.Checkpoint('Selecionado Estabelecimentos - Todos da Empresa: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Selecionados) then
  begin
    FormExpSescoopWhEstabSelec.ClickButton;
    VerificaInsere(FormExpSescoopWhEstabSelecCampo, FiltroEstabValor);
    Log.Checkpoint('Selecionado Estabelecimentos - Selecionados, com valor: ' + FiltroEstabValor);
  end
  else if (FiltroEstabTipo = _Todos) then
  begin
    FormExpSescoopWhEstabTodos.ClickButton;
    Log.Checkpoint('Selecionado Estabelecimentos - Todos');
  end;
end;

procedure FiltraLocais();
begin
  if (FormExpSescoopWhLocaisTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpSescoop.pg.tsSelecao.SB_Selecao.whLocais.whLocais10.Click();
    
  if (FiltroLocalTipo = _Especifico) then
  begin
    FormExpSescoopWhLocaisEspec.ClickButton;
    VerificaInsere(FormExpSescoopWhLocaisEspecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Específico, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Selecionados) then
  begin
    FormExpSescoopWhLocaisSelec.ClickButton;
    VerificaInsere(FormExpSescoopWhLocaisSelecCampo, FiltroLocalValor);
    Log.Checkpoint('Selecionado Locais - Selecionados, com valor: ' + FiltroLocalValor);
  end
  else if (FiltroLocalTipo = _Todos) then
  begin
    FormExpSescoopWhLocaisTodos.ClickButton;
    Log.Checkpoint('Selecionado Locais - Todos');
  end;
end;

procedure FiltraSituacao();
begin
  if (FormExpSescoopWhSituacaoTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpSescoop.pg.tsSelecao.SB_Selecao.whSituacao.whSituacao10.Click();
    
  if (FiltroSituacaoTipo = _Especifico) then
  begin
    FormExpSescoopWhSituacaoEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpSescoopWhSituacaoEspecCampo, FiltroSituacaoValor);
    Log.Checkpoint('Selecionado Situacao - Específico, com valor: ' + FiltroSituacaoValor);
  end
  else if (FiltroSituacaoTipo = _Selecionados) then
  begin
    FormExpSescoopWhSituacaoSelec.ClickButton;
    VerificaInsere(FormExpSescoopWhSituacaoSelecCampo, FiltroSituacaoValor);
    Log.Checkpoint('Selecionado Situacao - Selecionados, com valor: ' + FiltroSituacaoValor);
  end
  else if (FiltroSituacaoTipo = _Todos) then
  begin
    FormExpSescoopWhSituacaoTodos.ClickButton;
    Log.Checkpoint('Selecionado Situacao - Todos');
  end;
end;

procedure FiltraEmpregados();
begin
  if (FormExpSescoopWhEmpreTodos.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpSescoop.pg.tsSelecao.SB_Selecao.whEmpregados.whEmpregados10.Click();
    
  if (FiltroEmpreTipo = _Especifico) then
  begin
    FormExpSescoopWhEmpreEspec.ClickButton;
    VerificaConsultaF3Insere(_ModuloFolha, FormExpSescoopWhEmpreEspecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Específico, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Selecionados) then
  begin
    FormExpSescoopWhEmpreSelec.ClickButton;
    VerificaInsere(FormExpSescoopWhEmpreSelecCampo, FiltroEmpreValor);
    Log.Checkpoint('Selecionado Empregados - Selecionados, com valor: ' + FiltroEmpreValor);
  end
  else if (FiltroEmpreTipo = _Todos) then
  begin
    FormExpSescoopWhEmpreTodos.ClickButton;
    Log.Checkpoint('Selecionado Empregados - Todos');
  end;
end;

procedure FiltraData();
begin
  if (FormExpSescoopWhDataIni.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpSescoop.pg.tsSelecao.SB_Selecao.whDatas.whDatas10.Click();
    
  PreencheDatas(FormExpSescoopWhDataIni, FiltroDataIni); 
  PreencheDatas(FormExpSescoopWHDataFin, FiltroDataFin);
  Log.Checkpoint('Intervalo de Datas: ' + FiltroDataIni + ' à ' + FiltroDataFin);
end;

procedure DadosAdicionais();
begin
  if (FormExpSescoopWhLocalGrav.VisibleOnScreen = false) then
    Aliases.Folha.FRhProcExpSescoop.pg.tsSelecao.SB_Selecao.whDados.whDados10.Click();
    
  VerificaInsere(FormExpSescoopWhLocalGrav, FiltroLocalGrav);
end;

procedure FechaMensagemProcessoConcluido();
var 
  TelaAtencao, BtnOk: OleVariant;
begin
  if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
  begin
    TelaAtencao := Aliases.Folha.Window('#32770', 'Processo Concluído!', 1);
    BtnOk       := TelaAtencao.Window('Button', 'OK', 1);
    
    BtnOk.Click();  
  end;
end;

procedure ExecutaExpSescoop(pathData);
var 
  DDTExpSescoop: OleVariant;
  MensagemInativa: boolean;
begin
  MensagemInativa := True;
  
  AcessaExpSescoop();

  MapExpSescoop();

  DDTExpSescoop := CarregaDDT(pathData, 'Filtro');
  
  LeDataPoolExpSescoop(DDTExpSescoop.Name);

  FiltraEstab();
  
  FiltraLocais();
  
  FiltraSituacao();
  
  FiltraEmpregados();
  
  FiltraData();
  
  DadosAdicionais();

  btnExecutar.Click();
  
  while (MensagemInativa) do
  begin
    Delay(5000);
    if (Aliases.Folha.WaitWindow('#32770', 'Processo Concluído!', 1, 2000).Exists) then
    begin
      Aliases.Folha.dlgProcessoConclu_do2.btnOK.Click();     
    
      ActFechar(FormExpSescoop);
      
      MensagemInativa := false;
    end
    else if (Aliases.Folha.FVsErrorDlg.Visible) then
    begin
      Log.Warning('Erro, verifique as informações');
      Aliases.Folha.FVsErrorDlg.ButtonPanel.OKBtn.Click();
      ActFechar(FormExpSescoop);
      MensagemInativa := false;
    end
  end;  
  ValidaArquivos('C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO SESCOOP\ARQUIVO SESCOOP-PR\ARQUIVO_SESCOOPPR_MODELO.txt', 
                 'C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO SESCOOP\ARQUIVO SESCOOP-PR\ARQUIVO_SESCOOPPR_MODELO_ORACLE.txt', 
                 'C:\TEMP\EXPORTAÇÃO\EXPORTAÇÃO SESCOOP\ARQUIVO SESCOOP-PR\EXPORT.txt');
  DDT.CloseDriver(DDTExpSescoop.Name);
end;