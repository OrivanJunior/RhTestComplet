uses CommonsAll, CommonsObj, VarConsts, DataPoolGpsPs, ObjGpsPs;


procedure PreencheGpsPs();
begin
VerificaConsultaF3Insere(_ModuloFolha,CadGpsPsEBEstab,CadGpsPsDPEstab);
VerificaInsere(CadGpsPsEBMes,CadGpsPsDPMes);
VerificaInsere(CadGpsPsEBAno,CadGpsPsDPAno);
VerificaInsere(CadGpsPsEBSequencia,CadGpsPsDPSequencia);
VerificaInsere(CadGpsPsEBIdentificador,CadGpsPsDPIdentificador);
VerificaInsere(CadGpsPsEBDescGuia,CadGpsPsDPDescGuia);
VerificaInsere(CadGpsPsEBCodPagGps,CadGpsPsDPCodPagGps);
VerificaInsere(CadGpsPsEBRecolhida,CadGpsPsDPRecolhida);
VerificaInsere(CadGpsPsEBMesRec,CadGpsPsDPMesRec);
VerificaInsere(CadGpsPsEBAnoRec,CadGpsPsDPAnoRec);
VerificaInsere(CadGpsPsEBBaseprestador,CadGpsPsDPBaseprestador);
VerificaInsere(CadGpsPsEBVlrEmpresa,CadGpsPsDPVlrEmpresa);
VerificaInsere(CadGpsPsEBCodTerceiro,CadGpsPsDPCodTerceiro);
VerificaInsere(CadGpsPsEBVlrTerceiros,CadGpsPsDPVlrTerceiros);
VerificaInsere(CadGpsPsEBTotLiq,CadGpsPsDPTotLiq);
VerificaInsere(CadGpsPsEBVlrAtuMonet,CadGpsPsDPVlrAtuMonet);
VerificaInsere(CadGpsPsEBVlrJurMul,CadGpsPsDPVlrJurMul);
VerificaInsere(CadGpsPsEBTotGuia,CadGpsPsDPTotGuia);
end;


procedure CadastraFerColetivas(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Férias Coletivas');

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadFeriasColetivas(DDTCadastrar.Name);

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhFerCol');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadFerColetivasDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadFeriasColetivas();
  
  PreencheFeriasColetivas();
  PreencheGridEmpregados(pathData);  
  
  BtnSalvarFerColetivas.Click;
  
  if Aliases.Folha.dlgEventosBasesDeC_lculo.Exists then
  Aliases.Folha.dlgEventosBasesDeC_lculo.Close;
  
  ActFechar(FormPadraoFerColetivas);
  
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirFerColetivas(PathData);
var
BtnSim,
DDTExcluir : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Férias Coletivas');

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(PathData, _Excluir);

LeDataPoolCadFeriasColetivas(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhFerCol');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadFerColetivasDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin  
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadFeriasColetivas();

  ActExcluir(_ModuloFolha, 'FRhFerCol');
  
  
  if Aliases.Folha.TMessageForm_.Exists then
  Aliases.Folha.TMessageForm_.No.ClickButton;
  
  if Aliases.Folha.dlgAten_o2.Exists then 
  Aliases.Folha.dlgAten_o2.btnOK.ClickButton;
 
  end;
  DDTExcluir.Next;
end;
ActFechar(FormTelaConsultaForm);
DDT.CloseDriver(DDTExcluir.Name);
end;
