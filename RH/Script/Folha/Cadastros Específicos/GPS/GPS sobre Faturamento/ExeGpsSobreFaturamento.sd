uses CommonsAll, CommonsObj, VarConsts, DataPoolGpsSobreFaturamento, ObjGpsSobreFaturamento;

procedure PreencheGpsFatura();
begin
VerificaConsultaF3Insere(_ModuloFolha,CadGpsFaturaEBEstab,CadGpsFaturaDPEstab);
VerificaInsere(CadGpsFaturaEBMes,CadGpsFaturaDPMes);
VerificaInsere(CadGpsFaturaEBAno,CadGpsFaturaDPAno);
PreencheDatas(CadGpsFaturaEBDtVencimento,CadGpsFaturaDPDtVencimento);
VerificaConsultaF3Insere(_ModuloFolha,CadGpsFaturaEBIdLocal,CadGpsFaturaDPIdLocal);	
VerificaInsere(CadGpsFaturaEBSequencia,CadGpsFaturaDPSequencia);
VerificaConsultaF3Insere(_ModuloFolha,CadGpsFaturaEBIdFpas,CadGpsFaturaDPIdFpas);	
VerificaInsere(CadGpsFaturaEBCnpj,CadGpsFaturaDPCnpj);
VerificaInsere(CadGpsFaturaEBCodGps,CadGpsFaturaDPCodGps);
VerificaInsere(CadGpsFaturaEBDescGuia,CadGpsFaturaDPDescGuia);
VerificaInsere(CadGpsFaturaEBNroEmpregados,CadGpsFaturaDPNroEmpregados);
VerificaInsere(CadGpsFaturaEBVlrBaseAut,CadGpsFaturaDPVlrBaseAut);
VerificaInsere(CadGpsFaturaEBApespec,CadGpsFaturaDPApespec);
VerificaInsere(CadGpsFaturaEBRecolhida,CadGpsFaturaDPRecolhida);
VerificaInsere(CadGpsFaturaEBMesRec,CadGpsFaturaDPMesRec);
VerificaInsere(CadGpsFaturaEBAnoRec,CadGpsFaturaDPAnoRec);
VerificaInsere(CadGpsFaturaEBVlrRetenc,CadGpsFaturaDPVlrRetenc);
VerificaInsere(CadGpsFaturaEBVlrComp,CadGpsFaturaDPVlrComp);
VerificaInsere(CadGpsFaturaEBPcGrauRisco,CadGpsFaturaDPPcGrauRisco);
VerificaInsere(CadGpsFaturaEBPcTerceiros,CadGpsFaturaDPPcTerceiros);
VerificaInsere(CadGpsFaturaEBVlrDesonerado,CadGpsFaturaDPVlrDesonerado);
VerificaInsere(CadGpsFaturaEBVlrBaseEmpreg,CadGpsFaturaDPVlrBaseEmpreg);
VerificaInsere(CadGpsFaturaEBVlrBaseProlab,CadGpsFaturaDPVlrBaseProlab);
VerificaInsere(CadGpsFaturaEBVlrSegurados,CadGpsFaturaDPVlrSegurados);
VerificaInsere(CadGpsFaturaEBVlrEmpresa	,CadGpsFaturaDPVlrEmpresa);
VerificaInsere(CadGpsFaturaEBVlrGrauRisco,CadGpsFaturaDPVlrGrauRisco);
VerificaInsere(CadGpsFaturaEBVlrApEspecial,CadGpsFaturaDPVlrApEspecial);
VerificaInsere(CadGpsFaturaEBVlrPgCoop,CadGpsFaturaDPVlrPgCoop);
VerificaInsere(CadGpsFaturaEBCodTerceiro,CadGpsFaturaDPCodTerceiro);
VerificaInsere(CadGpsFaturaEBVlrTerceiros,CadGpsFaturaDPVlrTerceiros);
VerificaInsere(CadGpsFaturaEBTotDeduc,CadGpsFaturaDPTotDeduc);
VerificaInsere(CadGpsFaturaEBTotLiq,CadGpsFaturaDPTotLiq);
VerificaInsere(CadGpsFaturaEBVlrAtuMonet,CadGpsFaturaDPVlrAtuMonet);
VerificaInsere(CadGpsFaturaEBVlrJurMul,CadGpsFaturaDPVlrJurMul);
VerificaInsere(CadGpsFaturaEBTotGuia,CadGpsFaturaDPTotGuia);
end;

procedure FiltraTelaInicialGpsFaturamento();
begin
MapCadFiltroGpsFatura();
ListaConsultaGpsFatura.SetText('GPS Faturamento por Mês/Ano');
FiltroGpsFaturaMes.Keys('(Ignorar)');
FiltroGpsFaturaAno.Keys('(Ignorar)');
BtnOkFiltroFatura.ClickButton;

end;

procedure CadastraGpsFaturamento(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'GPS', 'GPS sobre Faturamento');

FiltraTelaInicialGpsFaturamento();

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadGpsFatura(DDTCadastrar.Name);

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhGpsFaturamento');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadGpsFaturaDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadGpsFatura();
  
  PreencheGpsFatura();
  
  ActSalvar(FormPadraoGpsFatura);
  ActFechar(FormPadraoGpsFatura);
  
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirGpsFaturamento(PathData);
var
DDTExcluir : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'GPS', 'GPS sobre Faturamento');

FiltraTelaInicialGpsFaturamento();

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(PathData, _Excluir);

LeDataPoolCadGpsFatura(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhGpsFaturamento');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Estab.',CadGpsFaturaDPEstab);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin  
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadGpsFatura();

  ActExcluir(_ModuloFolha, 'FRhGpsFaturamento');
  
  ActFechar(FormPadraoGpsFatura);
  end;
  DDTExcluir.Next;
end;
ActFechar(FormTelaConsultaForm);
DDT.CloseDriver(DDTExcluir.Name);
end;
