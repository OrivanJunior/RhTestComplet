uses CommonsAll, CommonsObj, VarConsts,DataPoolEveProgramados, ObjEveProgramados;

procedure PreencheEveProg();
begin

VerificaConsultaF3Insere(_ModuloFolha,CadEveProgrEBEstab,CadEveProgrDPEstab);
VerificaConsultaF3Insere(_ModuloFolha,CadEveProgrEBIdEmpregado,CadEveProgrDPIdEmpregado);
VerificaConsultaF3Insere(_ModuloFolha,CadEveProgrEBIdprocesso,CadEveProgrDPIdprocesso);		
PreencheDatas(CadEveProgrEBDtReferencia,CadEveProgrDPDtReferencia);
VerificaInsere(CadEveProgrEBVlrTotal,CadEveProgrDPVlrTotal);
VerificaConsultaF3Insere(_ModuloFolha,CadEveProgrEBIdmoeda,CadEveProgrDPIdmoeda);
VerificaConsultaF3Insere(_ModuloFolha,CadEveProgrEBIdEvento,CadEveProgrDPIdEvento);
VerificaInsere(CadEveProgrEBMotivoFechamento,CadEveProgrDPMotivoFechamento);
VerificaInsere(CadEveProgrEBCalcularAfastado,CadEveProgrDPCalcularAfastado);
VerificaInsere(CadEveProgrEBCalcFerias,CadEveProgrDPCalcFerias);		
VerificaInsere(CadEveProgrEBObservacoes,CadEveProgrDPObservacoes);
VerificaInsere(CadEveProgrEBFornecedor,CadEveProgrDPFornecedor);
VerificaInsere(CadEveProgrEBQtdeParc,CadEveProgrDPQtdeParc);
PreencheDatas(CadEveProgrEBMesAno,CadEveProgrDPMesAno);
BtnGerar.Click;
ActSalvar(FormPadraoEveProg);

if Aliases.Folha.dlgEventosBasesDeC_lculo.Exists then
Aliases.Folha.dlgEventosBasesDeC_lculo.btnOK.ClickButton;

VerificaInsere(CadEveProgrEBIdLayout,CadEveProgrDPIdLayout);
PreencheDatas(CadEveProgrEBData,CadEveProgrDPData);
BtnVisualizar.Click;
Delay(500);

if Aliases.Folha.FDirectPrintPreview.Exists then
 Aliases.Folha.FDirectPrintPreview.Close;
 
end;

procedure FiltraTelaInicialEveProg();
begin
FiltroEveProg();
ListaConsultaEveProg.SetText('Por Empregado/Evento');
FiltraCodEmpregado.Keys('(Ignorar)');
FiltraEvento.Keys('(Ignorar)');
BtnOkFiltro.ClickButton;

end;

procedure CadastraEveProgramado(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Eventos Programados');

FiltraTelaInicialEveProg();

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadEveProg(DDTCadastrar.Name);

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhEveProg');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Id. Empregado',CadEveProgrDPIdEmpregado);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadEveProg();
  
  PreencheEveProg();
 
  ActSalvar(FormPadraoEveProg);
  ActFechar(FormPadraoEveProg);
  end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirEveProgramado(PathData);
var
DDTExcluir : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Específicos', 'Eventos Programados');

FiltraTelaInicialEveProg();

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(PathData, _Excluir);

LeDataPoolCadEveProg(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FRhEveProg');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Id. Empregado',CadEveProgrDPIdEmpregado);
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin  
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadEveProg();

  ActExcluir(_ModuloFolha, 'FRhEveProg');

  ActFechar(FormPadraoEveProg);
  end;
  DDTExcluir.Next;
end;
ActFechar(FormTelaConsultaForm);
DDT.CloseDriver(DDTExcluir.Name);
end;


