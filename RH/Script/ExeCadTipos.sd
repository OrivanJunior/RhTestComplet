uses CommonsAll,CommonsObj,VarConsts,DataPoolCadTipos,ObjCadTipos;


procedure FiltroCadTipo();
begin

FormFiltroTipo        :=  Aliases.Folha.FFiltroConsultaCDS;
FiltroTipoConsulta    :=  Aliases.Folha.FFiltroConsultaCDS.grpConsulta.cbListaConsultas;
FiltroTipoConsultaCb1 :=  Aliases.Folha.FFiltroConsultaCDS.PanComp.cb1;
BtnFiltroTipoOk       :=  Aliases.Folha.FFiltroConsultaCDS.pnlBotao.bOK;
BtnFiltroTipoCancelar :=  Aliases.Folha.FFiltroConsultaCDS.pnlBotao.bCancelar;

FiltroTipoConsulta.SetText('Tipo do Evento Por Código');
FiltroTipoConsultaCb1.SetText('(Ignorar)');
BtnFiltroTipoOk.ClickButton;
  
end;

procedure PreencheTiposEventos(); 
begin

MapCadTiposEventos();
					
VerificaInsere(CadTipoEvenEBIdTipo,CadTipoEvenDPIdTipo);
VerificaInsere(CadTipoEvenEBDescricao,CadTipoEvenDPDescricao);
VerificaInsere(CadTipoEvenEBAfastDoenca,CadTipoEvenDPAfastDoenca);
VerificaInsere(CadTipoEvenEBAfastAcidente,CadTipoEvenDPAfastAcidente);
VerificaInsere(CadTipoEvenEBHorasServMilitar,CadTipoEvenDPHorasServMilitar);
VerificaInsere(CadTipoEvenEBHorasFerias,CadTipoEvenDPHorasFerias);
VerificaInsere(CadTipoEvenEBHorasNormais,CadTipoEvenDPHorasNormais);
VerificaInsere(CadTipoEvenEBHorasExtras,CadTipoEvenDPHorasExtras);
VerificaInsere(CadTipoEvenEBLicenMaternidade,CadTipoEvenDPLicenMaternidade);
VerificaInsere(CadTipoEvenEBHorasFaltas,CadTipoEvenDPHorasFaltas);
VerificaInsere(CadTipoEvenEBProLabore,CadTipoEvenDPProLabore);
VerificaInsere(CadTipoEvenEBSalDoFgts,CadTipoEvenDPSalDoFgts);
VerificaInsere(CadTipoEvenEBMultaResc,CadTipoEvenDPMultaResc);
VerificaInsere(CadTipoEvenEBFeriasResc,CadTipoEvenDPFeriasResc);
VerificaInsere(CadTipoEvenEBEveInss,CadTipoEvenDPEveInss);
VerificaInsere(CadTipoEvenEBEveIrrf,CadTipoEvenDPEveIrrf);
VerificaInsere(CadTipoEvenEBAvPrevioI,CadTipoEvenDPAvPrevioI);
VerificaInsere(CadTipoEvenEBMediaHrExt,CadTipoEvenDPMediaHrExt);
VerificaInsere(CadTipoEvenEBAdicFer,CadTipoEvenDPAdicFer);
VerificaInsere(CadTipoEvenEBIndenizAdic,CadTipoEvenDPIndenizAdic);
VerificaInsere(CadTipoEvenEBReclusao,CadTipoEvenDPReclusao);
VerificaInsere(CadTipoEvenEBEveVariavel,CadTipoEvenDPEveVariavel);
VerificaInsere(CadTipoEvenEBCalcMensal,CadTipoEvenDPCalcMensal);
VerificaInsere(CadTipoEvenEBLicenPaternidade,CadTipoEvenDPLicenPaternidade);
end;

procedure CadastraTipo(pathData);
var
DDTCadastrar : OleVariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Tipos');

FiltroCadTipo();

MapGridConsulta(_ModuloFolha);

DDTCadastrar := CarregaDDT(pathData, _Cadastrar);

LeDataPoolCadTipoEventos(DDTCadastrar.Name);

While not DDTCadastrar.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Tipo do Evento', CadTipoEvenDPIdTipo );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount < 1) then
  begin
  
  ActIncluir(FormTelaConsultaForm);
  
  MapCadTiposEventos();
  
  PreencheTiposEventos();
  
  ActSalvar(FormCadTiposEvento);
  ActFechar(FormCadTiposEvento);
  
  end;
  DDTCadastrar.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTCadastrar.Name);
end;

procedure ExcluirTipo(pathData);
var
DDTExcluir : Olevariant;
begin
AcessaItem(_ModuloFolha, 'Cadastros Gerais', 'Gerais', 'Eventos','Tipos');

FiltroCadTipo();

MapGridConsulta(_ModuloFolha);

DDTExcluir := CarregaDDT(pathData, _Excluir);

LeDataPoolCadTipoEventos(DDTExcluir.Name);

While not DDTExcluir.EOF do
begin

 if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
    ValidaFormAberto(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  FiltraGrid(_ModuloFolha, 'FBRowseCds', 'BGrid', 'Tipo do Evento', CadTipoEvenDPIdTipo );
  if (FormTelaConsultaGrid.ActiveView.ViewData.RowCount = 1) then
  begin
  
  ActConsulta(FormTelaConsultaForm);
  
  MapCadTiposEventos();
   
  ActExcluir(_ModuloFolha, 'FFormPadraoRHEVETIPO');
  
  ActFechar(FormCadTiposEvento);
  end;
  DDTExcluir.Next;
end;
  ActFechar(FormTelaConsultaForm);
  DDT.CloseDriver(DDTExcluir.Name);
end;